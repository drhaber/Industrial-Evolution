# Configuration file

~CONFIG_VERSION: 1.0

"global world-gen" {
    # Dimension number of the Carboniferous dimension. Do not change this unless you get errors [default: -82]
    I:dimCarboniferous=-82

    # List of mobs which can be found in the Carboniferous dimension. In the format: modid:mobid:maxspawn:weight:locationid (maxspawn [1-20] is the maximum number which can spawn as a group in the same chunk; weight [0-100] is how likely a group is to spawn; locationid can be either 1, 2 or 3 as these three location options for spawns: 1 = land, 2 = deep water [>4 blocks]; 3 = shallow water [<4 blocks]) [default: contains default spawns for this mod]
    S:dimCarboniferousMobs <
        lepidodendron:prehistoric_flora_acanthodes:8:20:3
        lepidodendron:prehistoric_flora_acanthodes:8:20:3
        lepidodendron:prehistoric_flora_jellyfish1:1:4:2
        lepidodendron:prehistoric_flora_jellyfish2:1:4:2
        lepidodendron:prehistoric_flora_jellyfish3:1:4:2
        lepidodendron:prehistoric_flora_jellyfish4:1:4:2
        lepidodendron:prehistoric_flora_jellyfish5:1:4:2
        lepidodendron:prehistoric_flora_jellyfish6:1:4:2
     >

    # Dimension number of the Devonian dimension. Do not change this unless you get errors [default: -81]
    I:dimDevonian=-81

    # List of mobs which can be found in the Devonian dimension. In the format: modid:mobid:maxspawn:weight:locationid (maxspawn [1-20] is the maximum number which can spawn as a group in the same chunk; weight [0-100] is how likely a group is to spawn; locationid can be either 1, 2 or 3 as these three location options for spawns: 1 = land, 2 = deep water [>4 blocks]; 3 = shallow water [<4 blocks]) [default: contains default spawns for this mod]
    S:dimDevonianMobs <
        lepidodendron:prehistoric_flora_acanthodes:4:30:2
        lepidodendron:prehistoric_flora_acanthodes:4:30:2
        lepidodendron:prehistoric_flora_bothriolepis:3:15:2
        lepidodendron:prehistoric_flora_bothriolepis:3:10:3
        lepidodendron:prehistoric_flora_jellyfish1:1:3:2
        lepidodendron:prehistoric_flora_jellyfish2:1:3:2
        lepidodendron:prehistoric_flora_jellyfish3:1:3:2
        lepidodendron:prehistoric_flora_jellyfish4:1:3:2
        lepidodendron:prehistoric_flora_jellyfish5:1:3:2
        lepidodendron:prehistoric_flora_jellyfish6:1:3:2
     >

    # Dimension number of the Ordovician and Silurian dimension. Do not change this unless you get errors [default: -80]
    I:dimOrdovicianSilurian=-80

    # List of mobs which can be found in the Ordovician and Silurian dimension. In the format: modid:mobid:maxspawn:weight:locationid (maxspawn [1-20] is the maximum number which can spawn as a group in the same chunk; weight [0-100] is how likely a group is to spawn; locationid can be either 1, 2 or 3 as these three location options for spawns: 1 = land, 2 = deep water [>4 blocks]; 3 = shallow water [<4 blocks]) [default: contains default spawns for this mod]
    S:dimOrdovicianSilurianMobs <
        lepidodendron:prehistoric_flora_jellyfish1:1:5:2
        lepidodendron:prehistoric_flora_jellyfish1:1:5:2
        lepidodendron:prehistoric_flora_jellyfish2:1:5:2
        lepidodendron:prehistoric_flora_jellyfish3:1:5:2
        lepidodendron:prehistoric_flora_jellyfish4:1:5:2
        lepidodendron:prehistoric_flora_jellyfish5:1:5:2
        lepidodendron:prehistoric_flora_jellyfish6:1:5:2
        lepidodendron:prehistoric_flora_jellyfish7:1:5:2
        lepidodendron:prehistoric_flora_jellyfish1:1:3:3
        lepidodendron:prehistoric_flora_jellyfish2:1:3:3
        lepidodendron:prehistoric_flora_jellyfish3:1:3:3
        lepidodendron:prehistoric_flora_jellyfish4:1:3:3
        lepidodendron:prehistoric_flora_jellyfish5:1:3:3
        lepidodendron:prehistoric_flora_jellyfish6:1:3:3
     >

    # Use flowers and pollination propagation method instead of sapling-drops for appropriate plants [default: true]
    B:doFlowers=true

    # Use fruits and cones propagation method instead of sapling-drops for appropriate plants [default: true]
    B:doFruits=true

    # Use seed propagation method instead of sapling-drops for appropriate plants [default: true]
    B:doSeeds=true

    # Use spore propagation method instead of sapling-drops for appropriate plants [default: true]
    B:doSpores=true

    # If set to true then all plants from this mod will generate, no matter how you set them below. You can still block them from biomes and dimensions in their individual settings. This setting does not affect algae. [default: false]
    B:genAllPlants=false

    # List of biomes all plants are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genGlobalBlacklist <
     >

    # List of log blocks which produce resin, in the format: modid:blockid:meta [default: "minecraft:log:1", "lepidodendron:hymenaea_log", "lepidodendron:agathis_log", "lepidodendron:araucarioxylon_log", "lepidodendron:bunya_log", "lepidodendron:columnaris_log", "lepidodendron:monkeypuzzle_log", "lepidodendron:sciadopitys_log", "lepidodendron:wollemi_log", "biomesoplenty:log_2:6", "biomesoplenty:log_0:7", "jurassicraft:araucaria_log", "wildnature:cedar_log", "wildnature:fir_log", "wildnature:pine_log"]
    S:genLogResin <
        minecraft:log:1
        lepidodendron:hymenaea_log
        lepidodendron:agathis_log
        lepidodendron:araucarioxylon_log
        lepidodendron:bunya_log
        lepidodendron:columnaris_log
        lepidodendron:monkeypuzzle_log
        lepidodendron:sciadopitys_log
        lepidodendron:wollemi_log
        biomesoplenty:log_2:6
        biomesoplenty:log_0:7
        jurassicraft:araucaria_log
        wildnature:cedar_log
        wildnature:fir_log
        wildnature:pine_log
     >
    I:levelSea=62

    # Percentage chance that a spreadable plant tries to spread when it receives a random tick (or is bonemealed). Does not affect other growth, only spread. (1 to 100) [default: 70]
    I:spreadPlants=100
}


"prehistoric ground cover" {
    # List of blocks and items from OTHER mods which can be used to craft Prehistoric Ground Cover, in the format: modid:blockid:meta [default: "fossil:bennettitales_large","fossil:bennettitales_small","fossil:calamites_leaves","fossil:calamites_sapling","fossil:cordaites_leaves","fossil:cordaites_sapling","fossil:crataegus","fossil:cyathea","fossil:dictyophyllum","fossil:dillhoffia_flower","fossil:dipteris","fossil:duisbergia","fossil:ependra","fossil:fern_block","fossil:florissantia","fossil:foozia","fossil:fossil_sapling_calamites","fossil:fossil_sapling_cordaites","fossil:fossil_sapling_palae","fossil:fossil_sapling_sigillaria","fossil:horsetail_small","fossil:licopodiophyta","fossil:osmunda","fossil:palm_leaves","fossil:palm_sapling","fossil:sagenopteris","fossil:sarracenia","fossil:sigillaria_leaves","fossil:sigillaria_sapling","fossil:tempskya","fossil:vaccinium","fossil:welwitschia","fossil:zamites","jurassicraft:ajuginucula_smithii","jurassicraft:ajuginucula_smithii_leaves","jurassicraft:araucaria_leaves","jurassicraft:araucaria_sapling","jurassicraft:bennettitalean_cycadeoidea","jurassicraft:bristle_fern","jurassicraft:calamites_leaves","jurassicraft:calamites_sapling","jurassicraft:cinnamon_fern","jurassicraft:cry_pansy","jurassicraft:cycad_zamites","jurassicraft:dicksonia","jurassicraft:dicroidium_zuberi","jurassicraft:dictyophyllum","jurassicraft:encephalartos","jurassicraft:ginkgo_leaves","jurassicraft:ginkgo_sapling","jurassicraft:gracilaria_seaweed","jurassicraft:graminidites_bambusoides","jurassicraft:heliconia","jurassicraft:ladinia_simplex","jurassicraft:moss","jurassicraft:orontium_mackii","jurassicraft:paleo_bale_cycad","jurassicraft:paleo_bale_cycadeoidea","jurassicraft:paleo_bale_fern","jurassicraft:paleo_bale_leaves","jurassicraft:paleo_bale_other","jurassicraft:phoenix_leaves","jurassicraft:phoenix_sapling","jurassicraft:psaronius_leaves","jurassicraft:psaronius_sapling","jurassicraft:raphaelia","jurassicraft:rhacophyton","jurassicraft:rhamnus_salicifolius","jurassicraft:scaly_tree_fern","jurassicraft:serenna_veriformans","jurassicraft:small_chain_fern","jurassicraft:small_cycad","jurassicraft:small_royal_fern","jurassicraft:tempskya","jurassicraft:umaltolepis","jurassicraft:west_indian_lilac","jurassicraft:woolly_stalked_begonia","rebornmod:ajuginucula_smithii","rebornmod:ajuginucula_smithii_leaves","rebornmod:araucaria_leaves","rebornmod:araucaria_sapling","rebornmod:bennettitalean_cycadeoidea","rebornmod:bristle_fern","rebornmod:calamites_leaves","rebornmod:calamites_sapling","rebornmod:cinnamon_fern","rebornmod:cry_pansy","rebornmod:cycad_zamites","rebornmod:dicksonia","rebornmod:dicroidium_zuberi","rebornmod:dictyophyllum","rebornmod:encephalartos","rebornmod:ginkgo_leaves","rebornmod:ginkgo_sapling","rebornmod:gracilaria_seaweed","rebornmod:graminidites_bambusoides","rebornmod:heliconia","rebornmod:ladinia_simplex","rebornmod:moss","rebornmod:orontium_mackii","rebornmod:paleo_bale_cycad","rebornmod:paleo_bale_cycadeoidea","rebornmod:paleo_bale_fern","rebornmod:paleo_bale_leaves","rebornmod:paleo_bale_other","rebornmod:phoenix_leaves","rebornmod:phoenix_sapling","rebornmod:psaronius_leaves","rebornmod:psaronius_sapling","rebornmod:raphaelia","rebornmod:rhacophyton","rebornmod:rhamnus_salicifolius","rebornmod:scaly_tree_fern","rebornmod:serenna_veriformans","rebornmod:small_chain_fern","rebornmod:small_cycad","rebornmod:small_royal_fern","rebornmod:tempskya","rebornmod:umaltolepis","rebornmod:west_indian_lilac","rebornmod:woolly_stalked_begonia"]
    S:genPlantPrehistoric <
        fossil:bennettitales_large
        fossil:bennettitales_small
        fossil:calamites_leaves
        fossil:calamites_sapling
        fossil:cordaites_leaves
        fossil:cordaites_sapling
        fossil:crataegus
        fossil:cyathea
        fossil:dictyophyllum
        fossil:dillhoffia_flower
        fossil:dipteris
        fossil:duisbergia
        fossil:ependra
        fossil:fern_block
        fossil:florissantia
        fossil:foozia
        fossil:fossil_sapling_calamites
        fossil:fossil_sapling_cordaites
        fossil:fossil_sapling_palae
        fossil:fossil_sapling_sigillaria
        fossil:horsetail_small
        fossil:licopodiophyta
        fossil:osmunda
        fossil:palm_leaves
        fossil:palm_sapling
        fossil:sagenopteris
        fossil:sarracenia
        fossil:sigillaria_leaves
        fossil:sigillaria_sapling
        fossil:tempskya
        fossil:vaccinium
        fossil:welwitschia
        fossil:zamites
        jurassicraft:ajuginucula_smithii
        jurassicraft:ajuginucula_smithii_leaves
        jurassicraft:araucaria_leaves
        jurassicraft:araucaria_sapling
        jurassicraft:bennettitalean_cycadeoidea
        jurassicraft:bristle_fern
        jurassicraft:calamites_leaves
        jurassicraft:calamites_sapling
        jurassicraft:cinnamon_fern
        jurassicraft:cry_pansy
        jurassicraft:cycad_zamites
        jurassicraft:dicksonia
        jurassicraft:dicroidium_zuberi
        jurassicraft:dictyophyllum
        jurassicraft:encephalartos
        jurassicraft:ginkgo_leaves
        jurassicraft:ginkgo_sapling
        jurassicraft:gracilaria_seaweed
        jurassicraft:graminidites_bambusoides
        jurassicraft:heliconia
        jurassicraft:ladinia_simplex
        jurassicraft:moss
        jurassicraft:orontium_mackii
        jurassicraft:paleo_bale_cycad
        jurassicraft:paleo_bale_cycadeoidea
        jurassicraft:paleo_bale_fern
        jurassicraft:paleo_bale_leaves
        jurassicraft:paleo_bale_other
        jurassicraft:phoenix_leaves
        jurassicraft:phoenix_sapling
        jurassicraft:psaronius_leaves
        jurassicraft:psaronius_sapling
        jurassicraft:raphaelia
        jurassicraft:rhacophyton
        jurassicraft:rhamnus_salicifolius
        jurassicraft:scaly_tree_fern
        jurassicraft:serenna_veriformans
        jurassicraft:small_chain_fern
        jurassicraft:small_cycad
        jurassicraft:small_royal_fern
        jurassicraft:tempskya
        jurassicraft:umaltolepis
        jurassicraft:west_indian_lilac
        jurassicraft:woolly_stalked_begonia
        rebornmod:ajuginucula_smithii
        rebornmod:ajuginucula_smithii_leaves
        rebornmod:araucaria_leaves
        rebornmod:araucaria_sapling
        rebornmod:bennettitalean_cycadeoidea
        rebornmod:bristle_fern
        rebornmod:calamites_leaves
        rebornmod:calamites_sapling
        rebornmod:cinnamon_fern
        rebornmod:cry_pansy
        rebornmod:cycad_zamites
        rebornmod:dicksonia
        rebornmod:dicroidium_zuberi
        rebornmod:dictyophyllum
        rebornmod:encephalartos
        rebornmod:ginkgo_leaves
        rebornmod:ginkgo_sapling
        rebornmod:gracilaria_seaweed
        rebornmod:graminidites_bambusoides
        rebornmod:heliconia
        rebornmod:ladinia_simplex
        rebornmod:moss
        rebornmod:orontium_mackii
        rebornmod:paleo_bale_cycad
        rebornmod:paleo_bale_cycadeoidea
        rebornmod:paleo_bale_fern
        rebornmod:paleo_bale_leaves
        rebornmod:paleo_bale_other
        rebornmod:phoenix_leaves
        rebornmod:phoenix_sapling
        rebornmod:psaronius_leaves
        rebornmod:psaronius_sapling
        rebornmod:raphaelia
        rebornmod:rhacophyton
        rebornmod:rhamnus_salicifolius
        rebornmod:scaly_tree_fern
        rebornmod:serenna_veriformans
        rebornmod:small_chain_fern
        rebornmod:small_cycad
        rebornmod:small_royal_fern
        rebornmod:tempskya
        rebornmod:umaltolepis
        rebornmod:west_indian_lilac
        rebornmod:woolly_stalked_begonia
     >

    # Distance NSEW from water that mossy prehistoric stone can exist and spread onto neighbouring stone (1 to 16) [default: 4]
    I:waterMossHorizontal=4

    # Distance above water required for mossy prehistoric stone to exist (0 to 6) [default: 1]
    I:waterMossVertical=1

    # Distance NSEW from water that Pangaean sandy prehistoric ground can exist and spread onto neighbouring sand (1 to 16) [default: 3]
    I:waterPangaeanHorizontal=3

    # Distance above water required for Pangaean sandy prehistoric ground to exist (0 to 6) [default: 0]
    I:waterPangaeanVertical=0

    # Distance NSEW from water that sandy prehistoric ground can exist and spread onto neighbouring sand (1 to 16) [default: 6]
    I:waterSandHorizontal=6

    # Distance above water required for sandy prehistoric ground to exist (0 to 6) [default: 0]
    I:waterSandVertical=0
}


"worldgen adoketophyton" {
    # List of dimension IDs Adoketophyton can generate in [default: 0]
    I:dimAdoketophyton <
        0
     >

    # Set to true to generate Adoketophyton naturally [default: false]
    B:genAdoketophyton=false

    # List of biomes Adoketophyton are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAdoketophytonBlacklistBiomes <
     >

    # List of biomes Adoketophyton are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAdoketophytonOverrideBiomes <
     >

    # Maximum height that Adoketophyton can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightAdoketophyton=90

    # Minimum height that Adoketophyton can generate (1 to 250) [default: 1]
    I:minheightAdoketophyton=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAdoketophyton=1.0

    # Set to true for Adoketophyton to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadAdoketophyton=true

    # Distance NSEW from water that Adoketophyton can exist and spread onto neighbouring dirt and grass (1 to 16) [default: 3]
    I:waterAdoketophytonHorizontal=3

    # Distance above water required for Adoketophyton to exist (0 to 6) [default: 0]
    I:waterAdoketophytonVertical=0
}


"worldgen aethophyllum" {
    # List of dimension IDs Aethophyllum can generate in [default: 0]
    I:dimAethophyllum <
        0
     >

    # Set to true to generate Aethophyllum naturally [default: false]
    B:genAethophyllum=false

    # List of biomes Aethophyllum are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAethophyllumBlacklistBiomes <
     >

    # List of biomes Aethophyllum are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAethophyllumOverrideBiomes <
     >

    # Maximum height that Aethophyllum can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightAethophyllum=90

    # Minimum height that Aethophyllum can generate (1 to 250) [default: 1]
    I:minheightAethophyllum=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAethophyllum=1.0
}


"worldgen agathis" {
    # List of dimension IDs Agathis trees can generate in [default: 0]
    I:dimAgathis <
        0
     >

    # Set to true to generate Agathis trees naturally [default: false]
    B:genAgathis=false

    # List of biomes Agathis trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAgathisBlacklistBiomes <
     >

    # List of biomes Agathis trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAgathisOverrideBiomes <
     >

    # Maximum height that Agathis trees can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightAgathis=100

    # Minimum height that Agathis trees can generate (1 to 250) [default: 1]
    I:minheightAgathis=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAgathis=1.0

    # Radius for podzol generation at base of Agathis trees (0 - 16: set to 0 to disable) [default: 6]
    I:podzolAgathis=6
}


"worldgen alethopteris" {
    # List of dimension IDs Alethopteris trees  can generate in [default: 0]
    I:dimAlethopteris <
        0
     >

    # Set to true to generate Alethopteris trees naturally [default: false]
    B:genAlethopteris=false

    # List of biomes Alethopteris trees  are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAlethopterisBlacklistBiomes <
     >

    # List of biomes Alethopteris trees  are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAlethopterisOverrideBiomes <
     >

    # Maximum height that Alethopteris trees  can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightAlethopteris=90

    # Minimum height that Alethopteris trees  can generate (1 to 250) [default: 1]
    I:minheightAlethopteris=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAlethopteris=1.0
}


"worldgen algae-sponges" {
    # List of dimension IDs Algae and Sponges can generate in [default: 0]
    I:dimAlgae <
        0
     >

    # List of biomes Brown Leafy Algae are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBrownLeafyAlgaeBlacklistBiomes <
     >

    # List of biomes Brown Leafy Algae are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genBrownLeafyAlgaeOverrideBiomes <
     >

    # List of biomes Brown Stalky Algae are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBrownStalkyAlgaeBlacklistBiomes <
     >

    # List of biomes Brown Stalky Algae are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genBrownStalkyAlgaeOverrideBiomes <
     >

    # List of biomes Fire Sponges are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genFireSpongeBlacklistBiomes <
     >

    # List of biomes Fire Sponges are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genFireSpongeOverrideBiomes <
     >

    # List of biomes Green Algae Mats are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genGreenAlgaeMatBlacklistBiomes <
     >

    # List of biomes Green Algae Mats are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genGreenAlgaeMatOverrideBiomes <
     >

    # List of biomes Green Branched Algae are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genGreenBranchedAlgaeBlacklistBiomes <
     >

    # List of biomes Green Branched Algae are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genGreenBranchedAlgaeOverrideBiomes <
     >

    # List of biomes Green Chara Algae are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genGreenCharaAlgaeBlacklistBiomes <
     >

    # List of biomes Green Chara Algae are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genGreenCharaAlgaeOverrideBiomes <
     >

    # List of biomes Green Crusted Algae are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genGreenCrustedAlgaeBlacklistBiomes <
     >

    # List of biomes Green Crusted Algae are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genGreenCrustedAlgaeOverrideBiomes <
     >

    # List of biomes Green Leafy Algae are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genGreenLeafyAlgaeBlacklistBiomes <
     >

    # List of biomes Green Leafy Algae are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genGreenLeafyAlgaeOverrideBiomes <
     >

    # List of biomes Macrocystis Kelp is blacklisted from, in the format: modid:biomeid [default: empty]
    S:genMacrocystisBlacklistBiomes <
     >

    # List of biomes Macrocystis Kelp is forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genMacrocystisOverrideBiomes <
     >

    # List of biomes Nereocystis Kelp is blacklisted from, in the format: modid:biomeid [default: empty]
    S:genNereocystisBlacklistBiomes <
     >

    # List of biomes Nereocystis Kelp is forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genNereocystisOverrideBiomes <
     >

    # List of biomes Orange Sponges are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genOrangeSpongeBlacklistBiomes <
     >

    # List of biomes Orange Sponges are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genOrangeSpongeOverrideBiomes <
     >

    # List of biomes Red Algae Mats are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genRedAlgaeMatBlacklistBiomes <
     >

    # List of biomes Red Algae Mats are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genRedAlgaeMatOverrideBiomes <
     >

    # List of biomes Red Leafy Algae are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genRedLeafyAlgaeBlacklistBiomes <
     >

    # List of biomes Red Leafy Algae are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genRedLeafyAlgaeOverrideBiomes <
     >

    # List of biomes Red Sponges are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genRedSpongeBlacklistBiomes <
     >

    # List of biomes Red Sponges are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genRedSpongeOverrideBiomes <
     >

    # List of biomes Red Tufted Algae are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genRedTuftedAlgaeBlacklistBiomes <
     >

    # List of biomes Red Tufted Algae are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genRedTuftedAlgaeOverrideBiomes <
     >

    # List of biomes Seaweed is blacklisted from, in the format: modid:biomeid [default: empty]
    S:genSeaweedBlacklistBiomes <
     >

    # List of biomes Seaweed is forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genSeaweedOverrideBiomes <
     >

    # List of biomes White Sponges are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genWhiteSpongeBlacklistBiomes <
     >

    # List of biomes White Sponges are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genWhiteSpongeOverrideBiomes <
     >

    # Percentage chance thatBrown Leafy Algae generates in a suitable chunk (0 to 100) [default: 100]
    I:weightBrownLeafyAlgae=100

    # Percentage chance that Brown Stalky Algae generates in a suitable chunk (0 to 100) [default: 100]
    I:weightBrownStalkyAlgae=100

    # Percentage chance that Fire Sponges generates in a suitable chunk (0 to 100) [default: 10]
    I:weightFireSponge=10

    # Percentage chance that Green Algae Mats generate in a suitable chunk (0 to 100) [default: 100]
    I:weightGreenAlgaeMat=100

    # Percentage chance that Green Branched Algae generates in a suitable chunk (0 to 100) [default: 100]
    I:weightGreenBranchedAlgae=100

    # Percentage chance that Green Chara Algae generates in a suitable chunk (0 to 100) [default: 100]
    I:weightGreenCharaAlgae=100

    # Percentage chance that Green Crusted Algae generates in a suitable chunk (0 to 100) [default: 100]
    I:weightGreenCrustedAlgae=100

    # Percentage chance that Green Leafy Algae generates in a suitable chunk (0 to 100) [default: 100]
    I:weightGreenLeafyAlgae=100

    # Percentage chance that Macrocysistis Kelp generates in a suitable chunk (0 to 100) [default: 100]
    I:weightMacrocystis=100

    # Percentage chance that Nereocystis Kelp generates in a suitable chunk (0 to 100) [default: 100]
    I:weightNereocystis=100

    # Percentage chance that Orange Sponges generates in a suitable chunk (0 to 100) [default: 10]
    I:weightOrangeSponge=10

    # Percentage chance that Red Algae Mats generate in a suitable chunk (0 to 100) [default: 100]
    I:weightRedAlgaeMat=100

    # Percentage chance that ed Leafy Algae generates in a suitable chunk (0 to 100) [default: 100]
    I:weightRedLeafyAlgae=100

    # Percentage chance that Red Sponges generates in a suitable chunk (0 to 100) [default: 10]
    I:weightRedSponge=10

    # Percentage chance that Red Tufted Algae generates in a suitable chunk (0 to 100) [default: 100]
    I:weightRedTuftedAlgae=100

    # Percentage chance that Seaweed generates in a suitable chunk (0 to 100) [default: 100]
    I:weightSeaweed=100

    # Percentage chance that White Sponges generates in a suitable chunk (0 to 100) [default: 10]
    I:weightWhiteSponge=10
}


"worldgen alpia" {
    # List of dimension IDs Alpia trees can generate in [default: 0]
    I:dimAlpia <
        0
     >

    # Set to true to generate Alpia trees naturally [default: false]
    B:genAlpia=false

    # List of biomes Alpia trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAlpiaBlacklistBiomes <
     >

    # List of biomes Alpia trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAlpiaOverrideBiomes <
     >

    # Maximum height that Alpia trees can generate (1 to 250, or set to 0 for unlimited) [default: 130]
    I:maxheightAlpia=130

    # Minimum height that Alpia trees can generate (1 to 250) [default: 90]
    I:minheightAlpia=90

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAlpia=1.0
}


"worldgen ankyropteris" {
    # List of dimension IDs Ankyropteris can generate in [default: 0]
    I:dimAnkyropteris <
        0
     >

    # List of biomes Ankyropteris are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAnkyropterisBlacklistBiomes <
     >

    # Set to true to generate Ankyropteris naturally on Calamites trees [default: false]
    B:genAnkyropterisCalamites=false

    # List of biomes Ankyropteris are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAnkyropterisOverrideBiomes <
     >

    # Set to true to generate Ankyropteris naturally on Sigillaria trees [default: false]
    B:genAnkyropterisSigillaria=false

    # Set to true to generate Ankyropteris naturally on Walchia trees [default: false]
    B:genAnkyropterisWalchia=false
}


"worldgen antarcticycas" {
    # List of dimension IDs Antarcticycas can generate in [default: 0]
    I:dimAntarcticycas <
        0
     >

    # Set to true to generate Antarcticycas naturally [default: false]
    B:genAntarcticycas=false

    # List of biomes Antarcticycas are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAntarcticycasBlacklistBiomes <
     >

    # List of biomes Antarcticycas are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAntarcticycasOverrideBiomes <
     >

    # Maximum height that Antarcticycas can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightAntarcticycas=90

    # Minimum height that Antarcticycas can generate (1 to 250) [default: 1]
    I:minheightAntarcticycas=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAntarcticycas=1.0
}


"worldgen araucaria araucana" {
    # List of dimension IDs Monkey Puzzle Araucaria trees can generate in [default: 0]
    I:dimAraucariaAraucana <
        0
     >

    # Set to true to generate Monkey Puzzle Araucaria trees naturally [default: false]
    B:genAraucariaAraucana=false

    # List of biomes Monkey Puzzle Araucaria trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAraucariaAraucanaBlacklistBiomes <
     >

    # List of biomes Monkey Puzzle Araucaria trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAraucariaAraucanaOverrideBiomes <
     >

    # Percentage chance that a Monkey Puzzle tree is the large variant (0 - 100) [default: 90]
    I:largeAraucariaAraucana=90

    # Maximum height that Monkey Puzzle Araucaria trees can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightAraucariaAraucana=120

    # Minimum height that Monkey Puzzle Araucaria trees can generate (1 to 250) [default: 1]
    I:minheightAraucariaAraucana=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAraucariaAraucana=1.0
}


"worldgen araucaria bidwilli" {
    # List of dimension IDs Bunya Araucaria trees can generate in [default: 0]
    I:dimAraucariaBidwilli <
        0
     >

    # Set to true to generate Bunya Araucaria trees naturally [default: false]
    B:genAraucariaBidwilli=false

    # List of biomes Bunya Araucaria trees are blacklisted from, in the format: modid:biomeid [default: "minecraft:mutated_mesa", "minecraft:mutated_mesa_rock", "minecraft:mutated_mesa_clear_rock"]
    S:genAraucariaBidwilliBlacklistBiomes <
        minecraft:mutated_mesa
        minecraft:mutated_mesa_rock
        minecraft:mutated_mesa_clear_rock
     >

    # List of biomes Bunya Araucaria trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAraucariaBidwilliOverrideBiomes <
     >

    # Maximum height that Bunya Araucaria trees can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightAraucariaBidwilli=110

    # Minimum height that Bunya Araucaria trees can generate (1 to 250) [default: 1]
    I:minheightAraucariaBidwilli=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAraucariaBidwilli=1.0
}


"worldgen araucaria columnaris" {
    # List of dimension IDs columnar Araucaria trees can generate in [default: 0]
    I:dimAraucariaColumnaris <
        0
     >

    # Set to true to generate columnar Araucaria trees naturally [default: false]
    B:genAraucariaColumnaris=false

    # List of biomes columnar Araucaria trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAraucariaColumnarisBlacklistBiomes <
     >

    # List of biomes columnar Araucaria trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAraucariaColumnarisOverrideBiomes <
     >

    # Maximum height that columnar Araucaria trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightAraucariaColumnaris=90

    # Minimum height that columnar Araucaria trees can generate (1 to 250) [default: 1]
    I:minheightAraucariaColumnaris=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAraucariaColumnaris=1.0
}


"worldgen araucaria mirabilis" {
    # List of dimension IDs Ancient Araucaria trees can generate in [default: 0]
    I:dimAraucariaMirabilis <
        0
     >

    # Set to true to generate Ancient Araucaria trees naturally [default: false]
    B:genAraucariaMirabilis=false

    # List of biomes Ancient Araucaria trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAraucariaMirabilisBlacklistBiomes <
     >

    # List of biomes Ancient Araucaria trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAraucariaMirabilisOverrideBiomes <
     >

    # Maximum height that Ancient Araucaria trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightAraucariaMirabilis=90

    # Minimum height that Ancient Araucaria trees can generate (1 to 250) [default: 1]
    I:minheightAraucariaMirabilis=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAraucariaMirabilis=1.0
}


"worldgen araucarioxylon" {
    # List of dimension IDs Araucarioxylon trees can generate in [default: 0]
    I:dimAraucarioxylon <
        0
     >

    # Set to true to generate Araucarioxylon trees naturally [default: false]
    B:genAraucarioxylon=false

    # List of biomes Araucarioxylon trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAraucarioxylonBlacklistBiomes <
     >

    # List of biomes Araucarioxylon trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAraucarioxylonOverrideBiomes <
     >

    # Maximum height that Araucarioxylon trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightAraucarioxylon=90

    # Minimum height that Araucarioxylon trees can generate (1 to 250) [default: 1]
    I:minheightAraucarioxylon=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAraucarioxylon=1.0
}


"worldgen archaefructus" {
    # List of dimension IDs Archaefructus can generate in [default: 0]
    I:dimArchaefructus <
        0
     >

    # Set to true to generate Archaefructus naturally [default: false]
    B:genArchaefructus=false

    # List of biomes Archaefructus are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genArchaefructusBlacklistBiomes <
     >

    # List of biomes Archaefructus are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genArchaefructusOverrideBiomes <
     >

    # Maximum height that Archaefructus can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightArchaefructus=100

    # Minimum height that Archaefructus can generate (1 to 250) [default: 1]
    I:minheightArchaefructus=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierArchaefructus=1.0

    # Set to true for Archaefructus to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadArchaefructus=true
}


"worldgen archaeopteris" {
    # List of dimension IDs Archaeopteris trees can generate in [default: 0]
    I:dimArchaeopteris <
        0
     >

    # Set to true to generate Archaeopteris trees naturally [default: false]
    B:genArchaeopteris=false

    # List of biomes Archaeopteris trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genArchaeopterisBlacklistBiomes <
     >

    # List of biomes Archaeopteris trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genArchaeopterisOverrideBiomes <
     >

    # Minimum height that Archaeopteris trees can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightArchaeopteris=120

    # Minimum height that Archaeopteris trees can generate (1 to 250) [default: 1]
    I:minheightArchaeopteris=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierArchaeopteris=1.0
}


"worldgen artocarpus" {
    # List of dimension IDs Artocarpus (breadfruit) trees can generate in [default: 0]
    I:dimArtocarpus <
        0
     >

    # Set to true to generate Artocarpus (breadfruit) trees naturally [default: false]
    B:genArtocarpus=false

    # List of biomes Artocarpus (breadfruit) trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genArtocarpusBlacklistBiomes <
     >

    # List of biomes Artocarpus (breadfruit) trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genArtocarpusOverrideBiomes <
     >

    # Maximum height that Artocarpus (breadfruit) trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightArtocarpus=90

    # Minimum height that Artocarpus (breadfruit) trees can generate (1 to 250) [default: 1]
    I:minheightArtocarpus=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierArtocarpus=1.0
}


"worldgen asteroxylon" {
    # List of dimension IDs Asteroxylon can generate in [default: 0]
    I:dimAsteroxylon <
        0
     >

    # Set to true to generate Asteroxylon naturally [default: false]
    B:genAsteroxylon=false

    # List of biomes Asteroxylon are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genAsteroxylonBlacklistBiomes <
     >

    # List of biomes Asteroxylon are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genAsteroxylonOverrideBiomes <
     >

    # Maximum height that Asteroxylon can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightAsteroxylon=90

    # Minimum height that Asteroxylon can generate (1 to 250) [default: 1]
    I:minheightAsteroxylon=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierAsteroxylon=1.0

    # Set to true for Asteroxylon to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadAsteroxylon=true

    # Distance NSEW from water that Asteroxylon can exist and spread onto neighbouring sand (1 to 16). [default: 5]
    I:waterAsteroxylonHorizontal=5

    # Distance above water required for Asteroxylon to exist (0 to 6) [default: 0]
    I:waterAsteroxylonVertical=0
}


"worldgen baiera" {
    # List of dimension IDs Baiera can generate in [default: 0]
    I:dimBaiera <
        0
     >

    # Set to true to generate Baiera naturally [default: false]
    B:genBaiera=false

    # List of biomes Baiera are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBaieraBlacklistBiomes <
     >

    # List of biomes Baiera are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genBaieraOverrideBiomes <
     >

    # Maximum height that Baiera can generate (1 to 250, or set to 0 for unlimited) [default: 85]
    I:maxheightBaiera=85

    # Minimum height that Baiera can generate (1 to 250) [default: 1]
    I:minheightBaiera=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierBaiera=1.0
}


"worldgen baikalophyllum" {
    # List of dimension IDs Baikalophyllum can generate in [default: 0]
    I:dimBaikalophyllum <
        0
     >

    # Set to true to generate Baikalophyllum naturally [default: false]
    B:genBaikalophyllum=false

    # List of biomes Baikalophyllum are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBaikalophyllumBlacklistBiomes <
     >

    # List of biomes Baikalophyllum are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genBaikalophyllumOverrideBiomes <
     >

    # Maximum height that Baikalophyllum can generate (1 to 250, or set to 0 for unlimited) [default: 85]
    I:maxheightBaikalophyllum=85

    # Minimum height that Baikalophyllum can generate (1 to 250) [default: 1]
    I:minheightBaikalophyllum=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierBaikalophyllum=1.0
}


"worldgen banksia" {
    # List of dimension IDs Archaeo-banksia can generate in [default: 0]
    I:dimBanksia <
        0
     >

    # Set to true to generate Archaeo-banksia naturally [default: false]
    B:genBanksia=false

    # List of biomes Archaeo-banksia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBanksiaBlacklistBiomes <
     >

    # List of biomes Archaeo-banksia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genBanksiaOverrideBiomes <
     >

    # Maximum height that Archaeo-banksia can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightBanksia=100

    # Minimum height that Archaeo-banksia can generate (1 to 250) [default: 1]
    I:minheightBanksia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierBanksia=1.0
}


"worldgen baragwanathia" {
    # List of dimension IDs Baragwanathia can generate in [default: 0]
    I:dimBaragwanathia <
        0
     >

    # Set to true to generate Baragwanathia naturally [default: false]
    B:genBaragwanathia=false

    # List of biomes Baragwanathia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBaragwanathiaBlacklistBiomes <
     >

    # List of biomes Baragwanathia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genBaragwanathiaOverrideBiomes <
     >

    # Maximum height that Baragwanathia can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightBaragwanathia=90

    # Minimum height that Baragwanathia can generate (1 to 250) [default: 1]
    I:minheightBaragwanathia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierBaragwanathia=1.0

    # Set to true for Baragwanathia to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadBaragwanathia=true
}


"worldgen bjuvia" {
    # List of dimension IDs Bjuvia can generate in [default: 0]
    I:dimBjuvia <
        0
     >

    # Set to true to generate Bjuvia naturally [default: false]
    B:genBjuvia=false

    # List of biomes Bjuvia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBjuviaBlacklistBiomes <
     >

    # List of biomes Bjuvia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genBjuviaOverrideBiomes <
     >

    # Maximum height that Bjuvia can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightBjuvia=90

    # Minimum height that Bjuvia can generate (1 to 250) [default: 1]
    I:minheightBjuvia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierBjuvia=1.0
}


"worldgen blue cycad" {
    # List of dimension IDs Blue Cycads can generate in [default: 0]
    I:dimBlueCycad <
        0
     >

    # Set to true to generate Blue Cycads naturally [default: false]
    B:genBlueCycad=false

    # List of biomes Blue Cycads are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBlueCycadBlacklistBiomes <
     >

    # List of biomes Blue Cycads are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genBlueCycadOverrideBiomes <
     >

    # Maximum height that Blue Cycads can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightBlueCycad=90

    # Minimum height that Blue Cycads can generate (1 to 250) [default: 1]
    I:minheightBlueCycad=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierBlueCycad=1.0
}


"worldgen bothrodendron" {
    # List of dimension IDs Bothrodendron trees can generate in [default: 0]
    I:dimBothrodendron <
        0
     >

    # Set to true to generate Bothrodendron trees naturally [default: false]
    B:genBothrodendron=false

    # List of biomes Bothrodendron trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBothrodendronBlacklistBiomes <
     >

    # List of biomes Bothrodendron trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genBothrodendronOverrideBiomes <
     >

    # Maximum height that Bothrodendron trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightBothrodendron=90

    # Minimum height that Bothrodendron trees can generate (1 to 250) [default: 1]
    I:minheightBothrodendron=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierBothrodendron=1.0
}


"worldgen brachyphyllum" {
    # List of dimension IDs Brachyphyllum trees can generate in [default: 0]
    I:dimBrachyphyllum <
        0
     >

    # Set to true to generate Brachyphyllum trees naturally [default: false]
    B:genBrachyphyllum=false

    # List of biomes Brachyphyllum trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBrachyphyllumBlacklistBiomes <
     >

    # List of biomes Brachyphyllum trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genBrachyphyllumOverrideBiomes <
     >

    # Maximum height that Brachyphyllum trees can generate (1 to 250, or set to 0 for unlimited) [default: 110]
    I:maxheightBrachyphyllum=110

    # Minimum height that Brachyphyllum trees can generate (1 to 250) [default: 1]
    I:minheightBrachyphyllum=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierBrachyphyllum=1.0
}


"worldgen calamites" {
    # List of dimension IDs Calamites can generate in [default: 0]
    I:dimCalamites <
        0
     >

    # Set to true to generate Calamites naturally [default: false]
    B:genCalamites=false

    # List of biomes Calamites are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genCalamitesBlacklistBiomes <
     >

    # List of biomes Calamites are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genCalamitesOverrideBiomes <
     >

    # Maximum height that Calamites can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightCalamites=90

    # Minimum height that Calamites can generate (1 to 250) [default: 1]
    I:minheightCalamites=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierCalamites=1.0

    # Set to true to allow Calamites to spread [default: true]
    B:spreadCalamites=true

    # Maximum blocks distance a child Calamites plant can appear from a parent [default: 16]
    I:spreadLimitCalamites=16

    # The percentage chance that, on receiving a random tick, a parent Calamites plant makes attempts to spawn a child [default: 50]
    I:spreadSpeedCalamites=50

    # Set to true to allow each new child Calamites plant to in turn be able to be a parent [default: false]
    B:spreadUnlimitedCalamites=false

    # Minimum blocks distance for water for a world-gen or a child Calamites plant to appear [default: 6]
    I:spreadWaterCalamites=6

    # Set to true to allow Calamites created during world-generation to spread [default: true]
    B:spreadWorldGenCalamites=true
}


"worldgen callistophytales (climbing)" {
    # List of dimension IDs Callistophytales can generate in [default: 0]
    I:dimCallistophytales <
        0
     >

    # List of biomes Callistophytales are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genCallistophytalesBlacklistBiomes <
     >

    # Set to true to generate Callistophytales naturally on Bothrodendron trees [default: false]
    B:genCallistophytalesBothrodendron=false

    # Set to true to generate Callistophytales naturally on Cordaites trees [default: false]
    B:genCallistophytalesCordaites=false

    # Set to true to generate Callistophytales naturally on Diaphorodendron trees [default: false]
    B:genCallistophytalesDiaphorodendron=false

    # Set to true to generate Callistophytales naturally on Lepidodendron trees [default: false]
    B:genCallistophytalesLepidodendron=false

    # List of biomes Callistophytales are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genCallistophytalesOverrideBiomes <
     >
}


"worldgen caytoniales" {
    # List of dimension IDs Caytoniales can generate in [default: 0]
    I:dimCaytoniales <
        0
     >

    # Set to true to generate Caytoniales naturally [default: false]
    B:genCaytoniales=false

    # List of biomes Caytoniales are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genCaytonialesBlacklistBiomes <
     >

    # List of biomes Caytoniales are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genCaytonialesOverrideBiomes <
     >

    # Maximum height that Caytoniales can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightCaytoniales=90

    # Minimum height that Caytoniales can generate (1 to 250) [default: 1]
    I:minheightCaytoniales=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierCaytoniales=1.0
}


"worldgen cinnamon fern" {
    # List of dimension IDs Cinnamon Ferns can generate in [default: 0]
    I:dimCinnamonFern <
        0
     >

    # Set to true to generate Cinnamon Ferns naturally [default: false]
    B:genCinnamonFern=false

    # List of biomes Cinnamon Ferns are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genCinnamonFernBlacklistBiomes <
     >

    # List of biomes Cinnamon Ferns are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genCinnamonFernOverrideBiomes <
     >

    # Maximum height that Cinnamon Ferns can generate (1 to 250, or set to 0 for unlimited) [default: 110]
    I:maxheightCinnamonFern=110

    # Minimum height that Cinnamon Ferns can generate (1 to 250) [default: 1]
    I:minheightCinnamonFern=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierCinnamonFern=1.0
}


"worldgen claytosmunda" {
    # List of dimension IDs Claytosmunda can generate in [default: 0]
    I:dimClaytosmunda <
        0
     >

    # Set to true to generate Claytosmunda naturally [default: false]
    B:genClaytosmunda=false

    # List of biomes Claytosmunda are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genClaytosmundaBlacklistBiomes <
     >

    # List of biomes Claytosmunda are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genClaytosmundaOverrideBiomes <
     >

    # Maximum height that Claytosmunda can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightClaytosmunda=90

    # Minimum height that Claytosmunda can generate (1 to 250) [default: 1]
    I:minheightClaytosmunda=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierClaytosmunda=1.0
}


"worldgen cobbania" {
    # List of dimension IDs Cobbania can generate in [default: 0]
    I:dimCobbania <
        0
     >

    # Set to true to generate Cobbania naturally [default: false]
    B:genCobbania=false

    # List of biomes Cobbania are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genCobbaniaBlacklistBiomes <
     >

    # List of biomes Cobbania are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genCobbaniaOverrideBiomes <
     >

    # Maximum height that Cobbania can generate (1 to 250, or set to 0 for unlimited) [default: 0]
    I:maxheightCobbania=80

    # Minimum height that Cobbania can generate (1 to 250) [default: 80]
    I:minheightCobbania=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierCobbania=1.0

    # Set to true for Cobbania to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadCobbania=true
}


"worldgen cooksonia" {
    # List of dimension IDs Cooksonia can generate in [default: 0]
    I:dimCooksonia <
        0
     >

    # Set to true to generate Cooksonia naturally [default: false]
    B:genCooksonia=false

    # List of biomes Cooksonia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genCooksoniaBlacklistBiomes <
     >

    # List of biomes Cooksonia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genCooksoniaOverrideBiomes <
     >

    # Maximum height that Cooksonia can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightCooksonia=90

    # Minimum height that Cooksonia can generate (1 to 250) [default: 1]
    I:minheightCooksonia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierCooksonia=1.0

    # Set to true for Cooksonia to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadCooksonia=true

    # Distance NSEW from water that Cooksonia can exist and spread onto neighbouring dirt and grass (1 to 16) [default: 3]
    I:waterCooksoniaHorizontal=3

    # Distance above water required for Cooksonia to exist (0 to 6) [default: 0]
    I:waterCooksoniaVertical=0
}


"worldgen corals" {
    # List of biomes Rugosa Corals are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genRugosaBlacklistBiomes <
     >

    # List of biomes Rugosa Corals are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genRugosaOverrideBiomes <
     >

    # Percentage chance that Rugosa Corals generates in a suitable chunk (0 to 100) [default: 10]
    I:weightRugosa=10
}


"worldgen cordaites" {
    # List of dimension IDs Cordaites trees can generate in [default: 0]
    I:dimCordaites <
        0
     >

    # Set to true to generate Cordaites trees naturally [default: false]
    B:genCordaites=false

    # List of biomes Cordaites trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genCordaitesBlacklistBiomes <
     >

    # List of biomes Cordaites trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genCordaitesOverrideBiomes <
     >

    # Maximum height that Cordaites trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightCordaites=90

    # Minimum height that Cordaites trees can generate (1 to 250) [default: 1]
    I:minheightCordaites=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierCordaites=1.0
}


"worldgen cycadeoidea" {
    # List of dimension IDs Cycadeoidea can generate in [default: 0]
    I:dimCycadeoidea <
        0
     >

    # Set to true to generate Cycadeoidea naturally [default: false]
    B:genCycadeoidea=false

    # List of biomes Cycadeoidea are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genCycadeoideaBlacklistBiomes <
     >

    # List of biomes Cycadeoidea are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genCycadeoideaOverrideBiomes <
     >

    # Maximum height that Cycadeoidea can generate (1 to 250, or set to 0 for unlimited) [default: 85]
    I:maxheightCycadeoidea=85

    # Minimum height that Cycadeoidea can generate (1 to 250) [default: 1]
    I:minheightCycadeoidea=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierCycadeoidea=1.0
}


"worldgen cycas" {
    # List of dimension IDs Cycas can generate in [default: 0]
    I:dimCycas <
        0
     >

    # Set to true to generate Cycas naturally [default: false]
    B:genCycas=false

    # List of biomes Cycas are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genCycasBlacklistBiomes <
     >

    # List of biomes Cycas are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genCycasOverrideBiomes <
     >

    # Maximum height that Cycas can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightCycas=90

    # Minimum height that Cycas can generate (1 to 250) [default: 1]
    I:minheightCycas=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierCycas=1.0
}


"worldgen dawn redwood" {
    # List of dimension IDs Dawn Redwood trees can generate in [default: 0]
    I:dimDawnRedwood <
        0
     >

    # Set to true to generate Dawn Redwood Trees naturally [default: false]
    B:genDawnRedwood=false

    # List of biomes Dawn Redwood trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genDawnRedwoodBlacklistBiomes <
     >

    # List of biomes Dawn Redwood trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genDawnRedwoodOverrideBiomes <
     >

    # Maximum height that Dawn Redwood trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightDawnRedwood=90

    # Minimum height that Dawn Redwood trees can generate (1 to 250) [default: 1]
    I:minheightDawnRedwood=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierDawnRedwood=1.0
}


"worldgen diaphorodendron" {
    # List of dimension IDs Diaphorodendron trees can generate in [default: 0]
    I:dimDiaphorodendron <
        0
     >

    # Set to true to generate Diaphorodendron trees naturally [default: false]
    B:genDiaphorodendron=false

    # List of biomes Diaphorodendron trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genDiaphorodendronBlacklistBiomes <
     >

    # List of biomes Diaphorodendron trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genDiaphorodendronOverrideBiomes <
     >

    # Maximum height that Diaphorodendron trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightDiaphorodendron=90

    # Minimum height that Diaphorodendron trees can generate (1 to 250) [default: 1]
    I:minheightDiaphorodendron=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierDiaphorodendron=1.0
}


"worldgen dicksonia" {
    # List of dimension IDs Dicksonia can generate in [default: 0]
    I:dimDicksonia <
        0
     >

    # Set to true to generate Dicksonia naturally [default: false]
    B:genDicksonia=false

    # List of biomes Dicksonia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genDicksoniaBlacklistBiomes <
     >

    # List of biomes Dicksonia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genDicksoniaOverrideBiomes <
     >

    # Maximum height that Dicksonia can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightDicksonia=90

    # Minimum height that Dicksonia can generate (1 to 250) [default: 1]
    I:minheightDicksonia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierDicksonia=1.0
}


"worldgen dicroidium" {
    # List of dimension IDs Dicroidium can generate in [default: 0]
    I:dimDicroidium <
        0
     >

    # Set to true to generate Dicroidium naturally [default: false]
    B:genDicroidium=false

    # List of biomes Dicroidium are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genDicroidiumBlacklistBiomes <
     >

    # List of biomes Dicroidium are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genDicroidiumOverrideBiomes <
     >

    # Maximum height that Dicroidium can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightDicroidium=90

    # Minimum height that Dicroidium can generate (1 to 250) [default: 1]
    I:minheightPsaronius=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierDicroidium=1.0
}


"worldgen dioon" {
    # List of dimension IDs Dioon can generate in [default: 0]
    I:dimDioon <
        0
     >

    # Set to true to generate Dioon naturally [default: false]
    B:genDioon=false

    # List of biomes Dioon are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genDioonBlacklistBiomes <
     >

    # List of biomes Dioon are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genDioonOverrideBiomes <
     >

    # Maximum height that Dioon can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightDioon=90

    # Minimum height that Dioon can generate (1 to 250) [default: 1]
    I:minheightDioon=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierDioon=1.0
}


"worldgen dollyphyton" {
    # List of dimension IDs Dollyphyton can generate in [default: 0]
    I:dimDollyphyton <
        0
     >

    # Set to true to generate Dollyphyton naturally [default: false]
    B:genDollyphyton=false

    # List of biomes Dollyphyton is blacklisted from, in the format: modid:biomeid [default: empty]
    S:genDollyphytonBlacklistBiomes <
     >

    # List of biomes Dollyphyton is forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genDollyphytonOverrideBiomes <
     >

    # Minimum height that Dollyphyton can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightDollyphyton=0

    # Minimum height that Dollyphyton can generate (1 to 250) [default: 1]
    I:minheightDollyphyton=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierDollyphyton=1.0

    # Radius Dollyphyton can spread (0 to 8) [default: 3]
    I:radiusDollyphyton=3
}


"worldgen edwardsiphyton" {
    # List of dimension IDs Edwardsiphyton can generate in [default: 0]
    I:dimEdwardsiphyton <
        0
     >

    # Set to true to generate Edwardsiphyton naturally [default: false]
    B:genEdwardsiphyton=false

    # List of biomes Edwardsiphyton is blacklisted from, in the format: modid:biomeid [default: empty]
    S:genEdwardsiphytonBlacklistBiomes <
     >

    # List of biomes Edwardsiphyton is forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genEdwardsiphytonOverrideBiomes <
     >

    # Minimum height that Edwardsiphyton can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightEdwardsiphyton=0

    # Minimum height that Edwardsiphyton can generate (1 to 250) [default: 1]
    I:minheightEdwardsiphyton=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierEdwardsiphyton=1.0

    # Radius Edwardsiphyton can spread (0 to 8) [default: 3]
    I:radiusEdwardsiphyton=3
}


"worldgen elkinsia" {
    # List of dimension IDs Elkinsia can generate in [default: 0]
    I:dimElkinsia <
        0
     >

    # Set to true to generate Elkinsia naturally [default: false]
    B:genElkinsia=false

    # List of biomes Elkinsia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genElkinsiaBlacklistBiomes <
     >

    # List of biomes Elkinsia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genElkinsiaOverrideBiomes <
     >

    # Maximum height that Elkinsia can generate (1 to 250, or set to 0 for unlimited) [default: 95]
    I:maxheightElkinsia=95

    # Minimum height that Elkinsia can generate (1 to 250) [default: 1]
    I:minheightElkinsia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierElkinsia=1.0
}


"worldgen ephedra" {
    # List of dimension IDs Ephedra can generate in [default: 0]
    I:dimEphedra <
        0
     >

    # Set to true to generate Ephedra naturally [default: false]
    B:genEphedra=false

    # List of biomes Ephedra are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genEphedraBlacklistBiomes <
     >

    # List of biomes Ephedra are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genEphedraOverrideBiomes <
     >

    # Maximum height that Ephedra can generate (1 to 250, or set to 0 for unlimited) [default: 0]
    I:maxheightEphedra=0

    # Minimum height that Ephedra can generate (1 to 250) [default: 1]
    I:minheightEphedra=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierEphedra=1.0
}


"worldgen equisetites" {
    # List of dimension IDs Equisetites can generate in [default: 0]
    I:dimEquisetites <
        0
     >

    # Set to true to generate Equisetites naturally [default: false]
    B:genEquisetites=false

    # List of biomes Equisetites are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genEquisetitesBlacklistBiomes <
     >

    # List of biomes Equisetites are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genEquisetitesOverrideBiomes <
     >

    # Maximum height that Equisetites can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightEquisetites=90

    # Minimum height that Equisetites can generate (1 to 250) [default: 1]
    I:minheightEquisetites=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierEquisetites=1.0
}


"worldgen field horsetail" {
    # List of dimension IDs Field Horsetails can generate in [default: 0]
    I:dimFieldHorsetail <
        0
     >

    # Set to true to generate Field Horsetails naturally [default: false]
    B:genFieldHorsetail=false

    # List of biomes Field Horsetails are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genFieldHorsetailBlacklistBiomes <
     >

    # List of biomes Field Horsetails are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genFieldHorsetailOverrideBiomes <
     >

    # Maximum height that Field Horsetails can generate (1 to 250, or set to 0 for unlimited) [default: 0]
    I:maxheightFieldHorsetail=0

    # Minimum height that Field Horsetails can generate (1 to 250) [default: 1]
    I:minheightFieldHorsetail=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierFieldHorsetail=1.0

    # Set to true for Field Horsetails to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadFieldHorsetail=true
}


"worldgen foozia" {
    # List of dimension IDs Foozia can generate in [default: 0]
    I:dimFoozia <
        0
     >

    # Set to true to generate Foozia naturally [default: false]
    B:genFoozia=false

    # List of biomes Foozia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genFooziaBlacklistBiomes <
     >

    # List of biomes Foozia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genFooziaOverrideBiomes <
     >

    # Maximum height that Foozia can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightFoozia=90

    # Minimum height that Foozia can generate (1 to 250) [default: 1]
    I:minheightFoozia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierFoozia=1.0

    # Set to true for Foozia to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadFoozia=true

    # Distance NSEW from water that Foozia can exist and spread onto neighbouring dirt and grass (1 to 16) [default: 3]
    I:waterFooziaHorizontal=3

    # Distance above water required for Foozia to exist (0 to 6) [default: 0]
    I:waterFooziaVertical=0
}


"worldgen giant horsetails" {
    # List of dimension IDs Giant Horsetails can generate in [default: 0]
    I:dimHorsetail <
        0
     >

    # Set to true to generate Giant Horsetails naturally [default: false]
    B:genHorsetail=false

    # List of biomes Giant Horsetails are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genHorsetailBlacklistBiomes <
     >

    # List of biomes Giant Horsetails are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genHorsetailOverrideBiomes <
     >

    # Maximum height that Giant Horsetails can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightHorsetail=100

    # Minimum height that Giant Horsetails can generate (1 to 250) [default: 1]
    I:minheightHorsetail=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierHorsetail=1.0
}


"worldgen gigantopterid" {
    # List of dimension IDs Gigantopterids can generate in [default: 0]
    I:dimGigantopterid <
        0
     >

    # Set to true to generate Gigantopterids naturally [default: false]
    B:genGigantopterid=false

    # List of biomes Gigantopterids are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genGigantopteridBlacklistBiomes <
     >

    # List of biomes Gigantopterids are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genGigantopteridOverrideBiomes <
     >

    # Minimum height that Gigantopterids can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightGigantopterid=90

    # Minimum height that Gigantopterids can generate (1 to 250) [default: 1]
    I:minheightGigantopterid=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierGigantopterid=1.0
}


"worldgen ginkgo" {
    # List of dimension IDs Ginkgo trees can generate in [default: 0]
    I:dimGinkgo <
        0
     >

    # Set to true to generate Ginkgo trees naturally [default: false]
    B:genGinkgo=false

    # List of biomes Ginkgo trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genGinkgoBlacklistBiomes <
     >

    # List of biomes Ginkgo trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genGinkgoOverrideBiomes <
     >

    # Maximum height that Ginkgo trees can generate (1 to 250, or set to 0 for unlimited) [default: 110]
    I:maxheightGinkgo=110

    # Minimum height that Ginkgo trees can generate (1 to 250) [default: 1]
    I:minheightGinkgo=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierGinkgo=1.0
}


"worldgen glossopteris" {
    # List of dimension IDs Glossopteris can generate in [default: 0]
    I:dimGlossopteris <
        0
     >

    # Set to true to generate Lepidodendron tree trees naturally [default: false]
    B:genGlossopteris=false

    # List of biomes Glossopteris is blacklisted from, in the format: modid:biomeid [default: empty]
    S:genGlossopterisBlacklistBiomes <
     >

    # Set to true to generate Glossopteris bushy variants naturally [default: false]
    B:genGlossopterisBush=false

    # List of biomes Glossopteris is forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genGlossopterisOverrideBiomes <
     >

    # Maximum height that Glossopteris can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightGlossopteris=90

    # Minimum height that Glossopteris can generate (1 to 250) [default: 1]
    I:minheightGlossopteris=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierGlossopteris=1.0
}


"worldgen guangdedendron" {
    # List of dimension IDs Guangdedendron can generate in [default: 0]
    I:dimGuangdedendron <
        0
     >

    # Set to true to generate Guangdedendron naturally [default: false]
    B:genGuangdedendron=false

    # List of biomes Guangdedendron are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genGuangdedendronBlacklistBiomes <
     >

    # List of biomes Guangdedendron are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genGuangdedendronOverrideBiomes <
     >

    # Maximum height that Guangdedendron can generate (1 to 250, or set to 0 for unlimited) [default: 80]
    I:maxheightGuangdedendron=80

    # Minimum height that Guangdedendron can generate (1 to 250) [default: 1]
    I:minheightGuangdedendron=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierGuangdedendron=1.0
}


"worldgen hironoia" {
    # List of dimension IDs Hironoia can generate in [default: 0]
    I:dimHironoia <
        0
     >

    # Set to true to generate Hironoia naturally [default: false]
    B:genHironoia=false

    # List of biomes Hironoia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genHironoiaBlacklistBiomes <
     >

    # List of biomes Hironoia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genHironoiaOverrideBiomes <
     >

    # Minimum height that Hironoia can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightHironoia=100

    # Minimum height that Hironoia can generate (1 to 250) [default: 1]
    I:minheightHironoia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierHironoia=1.0
}


"worldgen hymenaea" {
    # List of dimension IDs Hymenaea trees can generate in [default: 0]
    I:dimHymenaea <
        0
     >

    # Set to true to generate Hymenaea trees naturally [default: false]
    B:genHymenaea=false

    # List of biomes Hymenaea trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genHymenaeaBlacklistBiomes <
     >

    # List of biomes Hymenaea trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genHymenaeaOverrideBiomes <
     >

    # Maximum height that Hymenaea trees can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightHymenaea=120

    # Minimum height that Hymenaea trees can generate (1 to 250) [default: 1]
    I:minheightHymenaea=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierHymenaea=1.0
}


"worldgen isoetes" {
    # List of dimension IDs Isoetes can generate in [default: 0]
    I:dimIsoetes <
        0
     >

    # Set to true to generate Isoetes naturally [default: false]
    B:genIsoetes=false

    # List of biomes Isoetes are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genIsoetesBlacklistBiomes <
     >

    # List of biomes Isoetes are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genIsoetesOverrideBiomes <
     >

    # Maximum height that Isoetes can generate (1 to 250, or set to 0 for unlimited) [default: 0]
    I:maxheightIsoetes=0

    # Minimum height that Isoetes can generate (1 to 250) [default: 1]
    I:minheightIsoetes=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierIsoetes=1.0

    # Set to true for Isoetes to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadIsoetes=true
}


"worldgen komlopteris" {
    # List of dimension IDs Komlopteris trees can generate in [default: 0]
    I:dimKomlopteris <
        0
     >

    # Set to true to generate Komlopteris trees naturally [default: false]
    B:genKomlopteris=false

    # List of biomes Komlopteris trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genKomlopterisBlacklistBiomes <
     >

    # List of biomes Komlopteris trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genKomlopterisOverrideBiomes <
     >

    # Maximum height that Komlopteris trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightKomlopteris=90

    # Minimum height that Komlopteris trees can generate (1 to 250) [default: 75]
    I:minheightKomlopteris=75

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierKomlopteris=1.0
}


"worldgen ladinia" {
    # List of dimension IDs Ladinia can generate in [default: 0]
    I:dimLadinia <
        0
     >

    # Set to true to generate Ladinia naturally [default: false]
    B:genLadinia=false

    # List of biomes Ladinia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genLadiniaBlacklistBiomes <
     >

    # List of biomes Ladinia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genLadiniaOverrideBiomes <
     >

    # Maximum height that Ladinia can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightLadinia=120

    # Minimum height that Ladinia can generate (1 to 250) [default: 1]
    I:minheightLadinia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierLadinia=1.0
}


"worldgen lepidodendron" {
    # List of dimension IDs Lepidodendron trees can generate in [default: 0]
    I:dimLepidodendron <
        0
     >

    # Set to true to generate Lepidodendron trees naturally [default: false]
    B:genLepidodendron=false

    # List of biomes Lepidodendron trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genLepidodendronBlacklistBiomes <
     >

    # List of biomes Lepidodendron trees are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genLepidodendronOverrideBiomes <
     >

    # Maximum height that Lepidodendron trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightLepidodendron=90

    # Minimum height that Lepidodendron trees can generate (1 to 250) [default: 1]
    I:minheightLepidodendron=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierLepidodendron=1.0
}


"worldgen lepidopteris" {
    # List of dimension IDs Lepidopteris can generate in [default: 0]
    I:dimLepidopteris <
        0
     >

    # Set to true to generate Lepidopteris naturally [default: false]
    B:genLepidopteris=false

    # List of biomes Lepidopteris are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genLepidopterisBlacklistBiomes <
     >

    # List of biomes Lepidopteris are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genLepidopterisOverrideBiomes <
     >

    # Maximum height that Lepidopteris can generate (1 to 250, or set to 0 for unlimited) [default: 95]
    I:maxheightLepidopteris=95

    # Minimum height that Lepidopteris can generate (1 to 250) [default: 1]
    I:minheightLepidopteris=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierLepidopteris=1.0
}


"worldgen leptocycas" {
    # List of dimension IDs Leptocycas can generate in [default: 0]
    I:dimLeptocycas <
        0
     >

    # Set to true to generate Leptocycas naturally [default: false]
    B:genLeptocycas=false

    # List of biomes Leptocycas are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genLeptocycasBlacklistBiomes <
     >

    # List of biomes Leptocycas are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genLeptocycasOverrideBiomes <
     >

    # Maximum height that Leptocycas can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightLeptocycas=90

    # Minimum height that Leptocycas can generate (1 to 250) [default: 1]
    I:minheightLeptocycas=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierLeptocycas=1.0
}


"worldgen liriodendron" {
    # List of dimension IDs Liriodendron (Tulip trees) can generate in [default: 0]
    I:dimLiriodendron <
        0
     >

    # Set to true to generate Liriodendron (Tulip trees) naturally [default: false]
    B:genLiriodendron=false

    # List of biomes Liriodendron (Tulip trees) are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genLiriodendronBlacklistBiomes <
     >

    # List of biomes Liriodendron (Tulip trees) are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genLiriodendronOverrideBiomes <
     >

    # Maximum height that Liriodendron (Tulip trees) can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightLiriodendron=90

    # Minimum height that Liriodendron (Tulip trees) can generate (1 to 250) [default: 1]
    I:minheightLiriodendron=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierLiriodendron=1.0
}


"worldgen magnolia" {
    # List of dimension IDs Magnolia trees can generate in [default: 0]
    I:dimMagnolia <
        0
     >

    # Set to true to generate Magnolia trees naturally [default: false]
    B:genMagnolia=false

    # List of biomes Magnolia trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genMagnoliaBlacklistBiomes <
     >

    # List of biomes Magnolia trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genMagnoliaOverrideBiomes <
     >

    # Maximum height that Magnolia trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightMagnolia=90

    # Minimum height that Magnolia trees can generate (1 to 250) [default: 1]
    I:minheightMagnolia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierMagnolia=1.0
}


"worldgen maple" {
    # List of dimension IDs Maple trees can generate in [default: 0]
    I:dimMaple <
        0
     >

    # Set to true to generate Maple trees naturally [default: false]
    B:genMaple=false

    # List of biomes Maple trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genMapleBlacklistBiomes <
     >

    # List of biomes Maple trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genMapleOverrideBiomes <
     >

    # Maximum height that Maple trees can generate (1 to 250, or set to 0 for unlimited) [default: 110]
    I:maxheightMaple=110

    # Minimum height that Maple trees can generate (1 to 250) [default: 1]
    I:minheightMaple=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierMaple=1.0
}


"worldgen marattia" {
    # List of dimension IDs Marattia can generate in [default: 0]
    I:dimMarattia <
        0
     >

    # Set to true to generate Marattia naturally [default: false]
    B:genMarattia=false

    # List of biomes Marattia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genMarattiaBlacklistBiomes <
     >

    # List of biomes Marattia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genMarattiaOverrideBiomes <
     >

    # Maximum height that Marattia can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightMarattia=90

    # Minimum height that Marattia can generate (1 to 250) [default: 1]
    I:minheightMarattia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierMarattia=1.0
}


"worldgen matonia" {
    # List of dimension IDs Matonia can generate in [default: 0]
    I:dimMatonia <
        0
     >

    # Set to true to generate Matonia naturally [default: false]
    B:genMatonia=false

    # List of biomes Matonia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genMatoniaBlacklistBiomes <
     >

    # List of biomes Matonia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genMatoniaOverrideBiomes <
     >

    # Minimum height that Matonia can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightMatonia=100

    # Minimum height that Matonia can generate (1 to 250) [default: 1]
    I:minheightMatonia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierMatonia=1.0
}


"worldgen medullosales" {
    # List of dimension IDs Medullosales can generate in [default: 0]
    I:dimMedullosales <
        0
     >

    # Set to true to generate Medullosales naturally [default: false]
    B:genMedullosales=false

    # List of biomes Medullosales are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genMedullosalesBlacklistBiomes <
     >

    # List of biomes Medullosales are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genMedullosalesOverrideBiomes <
     >

    # Maximum height that Medullosales can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightMedullosales=90

    # Minimum height that Medullosales can generate (1 to 250) [default: 1]
    I:minheightMedullosales=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierMedullosales=1.0
}


"worldgen nathorstiana" {
    # List of dimension IDs Nathorstiana can generate in [default: 0]
    I:dimNathorstiana <
        0
     >

    # Set to true to generate Nathorstiana naturally [default: false]
    B:genNathorstiana=false

    # List of biomes Nathorstiana are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genNathorstianaBlacklistBiomes <
     >

    # List of biomes Nathorstiana are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genNathorstianaOverrideBiomes <
     >

    # Maximum height that Nathorstiana can generate (1 to 250, or set to 0 for unlimited) [default: 0]
    I:maxheightNathorstiana=0

    # Minimum height that Nathorstiana can generate (1 to 250) [default: 1]
    I:minheightNathorstiana=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierNathorstiana=1.0

    # Set to true for Nathorstiana to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadNathorstiana=true
}


"worldgen nelumbo" {
    # List of dimension IDs Nelumbo can generate in [default: 0]
    I:dimNelumbo <
        0
     >

    # Set to true to generate Nelumbo naturally [default: false]
    B:genNelumbo=false

    # List of biomes Nelumbo are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genNelumboBlacklistBiomes <
     >

    # List of biomes Nelumbo are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genNelumboOverrideBiomes <
     >

    # Maximum height that Nelumbo can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightNelumbo=90

    # Minimum height that Nelumbo can generate (1 to 250) [default: 1]
    I:minheightNelumbo=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierNelumbo=1.0
}


"worldgen neocalamites" {
    # List of dimension IDs Neocalamites can generate in [default: 0]
    I:dimNeocalamites <
        0
     >

    # Set to true to generate Neocalamites naturally [default: false]
    B:genNeocalamites=false

    # List of biomes Neocalamites are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genNeocalamitesBlacklistBiomes <
     >

    # List of biomes Scrambling Sphenophyllales are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genNeocalamitesOverrideBiomes <
     >

    # Maximum height that Neocalamites can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightNeocalamites=90

    # Minimum height that Neocalamites can generate (1 to 250) [default: 1]
    I:minheightNeocalamites=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierNeocalamites=1.0
}


"worldgen neuropteridium" {
    # List of dimension IDs Neuropteridium can generate in [default: 0]
    I:dimNeuropteridium <
        0
     >

    # Set to true to generate Neuropteridium naturally [default: false]
    B:genNeuropteridium=false

    # List of biomes Neuropteridium are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genNeuropteridiumBlacklistBiomes <
     >

    # List of biomes Neuropteridium are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genNeuropteridiumOverrideBiomes <
     >

    # Maximum height that Neuropteridium can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightNeuropteridium=90

    # Minimum height that Neuropteridium can generate (1 to 250) [default: 1]
    I:minheightNeuropteridium=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierNeuropteridium=1.0
}


"worldgen nilssoniocladus" {
    # List of dimension IDs Nilssoniocladus can generate in [default: 0]
    I:dimNilssoniocladus <
        0
     >

    # Set to true to generate Nilssoniocladus naturally on Agathis trees [default: false]
    B:genNilssoniocladusAgathis=false

    # Set to true to generate Nilssoniocladus naturally on Monkey Puzzle Araucaria trees [default: false]
    B:genNilssoniocladusAraucariaAraucana=false

    # List of biomes Nilssoniocladus are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genNilssoniocladusBlacklistBiomes <
     >

    # Set to true to generate Nilssoniocladus naturally on Ancient Araucaria trees [default: false]
    B:genNilssoniocladusMirabilis=false

    # List of biomes Nilssoniocladus are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genNilssoniocladusOverrideBiomes <
     >

    # Set to true to generate Nilssoniocladus naturally on Redwood trees [default: false]
    B:genNilssoniocladusRedwood=false
}


"worldgen noeggerathiales" {
    # List of dimension IDs Noeggerathiales can generate in [default: 0]
    I:dimNoeggerathiales <
        0
     >

    # Set to true to generate Noeggerathiales naturally [default: false]
    B:genNoeggerathiales=false

    # List of biomes Noeggerathiales are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genNoeggerathialesBlacklistBiomes <
     >

    # List of biomes Noeggerathiales are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genNoeggerathialesOverrideBiomes <
     >

    # Maximum height that Noeggerathiales can generate (1 to 250, or set to 0 for unlimited) [default: 85]
    I:maxheightNoeggerathiales=85

    # Minimum height that Noeggerathiales can generate (1 to 250) [default: 1]
    I:minheightNoeggerathiales=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierNoeggerathiales=1.0
}


"worldgen odontopteris" {
    # List of dimension IDs Odontopteris can generate in [default: 0]
    I:dimOdontopteris <
        0
     >

    # List of biomes Odontopteris are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genOdontopterisBlacklistBiomes <
     >

    # Set to true to generate Odontopteris naturally on Bothrodendron trees [default: false]
    B:genOdontopterisBothrodendron=false

    # Set to true to generate Odontopteris naturally on Cordaites trees [default: false]
    B:genOdontopterisCordaites=false

    # Set to true to generate Odontopteris naturally on Diaphorodendron trees [default: false]
    B:genOdontopterisDiaphorodendron=false

    # Set to true to generate Odontopteris naturally on Lepidodendron trees [default: false]
    B:genOdontopterisLepidodendron=false

    # List of biomes Odontopteris are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genOdontopterisOverrideBiomes <
     >

    # Set to true to generate Odontopteris naturally on Sigillaria trees [default: false]
    B:genOdontopterisSigillaria=false
}


"worldgen omphalophloios" {
    # List of dimension IDs Omphalophloios can generate in [default: 0]
    I:dimOmphalophloios <
        0
     >

    # Set to true to generate Omphalophloios naturally [default: false]
    B:genOmphalophloios=false

    # List of biomes Omphalophloios are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genOmphalophloiosBlacklistBiomes <
     >

    # List of biomes Omphalophloios are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genOmphalophloiosOverrideBiomes <
     >

    # Maximum height that Omphalophloios can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightOmphalophloios=100

    # Minimum height that Omphalophloios can generate (1 to 250) [default: 1]
    I:minheightOmphalophloios=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierOmphalophloios=1.0
}


"worldgen osmunda" {
    # List of dimension IDs Osmunda can generate in [default: 0]
    I:dimOsmunda <
        0
     >

    # Set to true to generate Osmunda naturally [default: false]
    B:genOsmunda=false

    # List of biomes Osmunda are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genOsmundaBlacklistBiomes <
     >

    # List of biomes Osmunda are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genOsmundaOverrideBiomes <
     >

    # Maximum height that Osmunda can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightOsmunda=90

    # Minimum height that Osmunda can generate (1 to 250) [default: 1]
    I:minheightOsmunda=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierOsmunda=1.0
}


"worldgen pachypteris" {
    # List of dimension IDs Pachypteris can generate in [default: 0]
    I:dimPachypteris <
        0
     >

    # Set to true to generate Pachypteris naturally [default: false]
    B:genPachypteris=false

    # List of biomes Pachypteris are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genPachypterisBlacklistBiomes <
     >

    # List of biomes Pachypteris are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPachypterisOverrideBiomes <
     >

    # Maximum height that Pachypteris can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightPachypteris=90

    # Minimum height that Pachypteris can generate (1 to 250) [default: 1]
    I:minheightPachypteris=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPachypteris=1.0
}


"worldgen palaeostachya" {
    # List of dimension IDs Palaeostachya can generate in [default: 0]
    I:dimPalaeostachya <
        0
     >

    # Set to true to generate Palaeostachya naturally [default: false]
    B:genPalaeostachya=false

    # List of biomes Palaeostachya are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genPalaeostachyaBlacklistBiomes <
     >

    # List of biomes Palaeostachya are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPalaeostachyaOverrideBiomes <
     >

    # Maximum height that Palaeostachya can generate (1 to 250, or set to 0 for unlimited) [default: 95]
    I:maxheightPalaeostachya=95

    # Minimum height that Palaeostachya can generate (1 to 250) [default: 1]
    I:minheightPalaeostachya=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPalaeostachya=1.0
}


"worldgen pertica" {
    # List of dimension IDs Pertica can generate in [default: 0]
    I:dimPertica <
        0
     >

    # Set to true to generate Pertica naturally [default: false]
    B:genPertica=false

    # List of biomes Pertica are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genPerticaBlacklistBiomes <
     >

    # List of biomes Pertica are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPerticaOverrideBiomes <
     >

    # Maximum height that Pertica can generate (1 to 250, or set to 0 for unlimited) [default: 85]
    I:maxheightPertica=90

    # Minimum height that Pertica can generate (1 to 250) [default: 1]
    I:minheightPertica=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPertica=1.0
}


"worldgen pleuromeia" {
    # List of dimension IDs Pleuromeia can generate in [default: 0]
    I:dimPleuromeia <
        0
     >

    # Set to true to generate Pleuromeia naturally [default: false]
    B:genPleuromeia=false

    # List of biomes Pleuromeia are blacklisted from, in the format: modid:biomeid [default: "minecraft:mutated_mesa", "minecraft:mutated_mesa_rock", "minecraft:mutated_mesa_clear_rock"]
    S:genPleuromeiaBlacklistBiomes <
        minecraft:mutated_mesa
        minecraft:mutated_mesa_rock
        minecraft:mutated_mesa_clear_rock
     >

    # List of biomes Pleuromeia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPleuromeiaOverrideBiomes <
     >

    # Maximum height that Pleuromeia can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightPleuromeia=90

    # Minimum height that Pleuromeia can generate (1 to 250) [default: 1]
    I:minheightPleuromeia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPleuromeia=1.0
}


"worldgen podozamites" {
    # List of dimension IDs Podozamites trees can generate in [default: 0]
    I:dimPodozamites <
        0
     >

    # Set to true to generate Podozamites trees naturally [default: false]
    B:genPodozamites=false

    # List of biomes Podozamites trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genPodozamitesBlacklistBiomes <
     >

    # List of biomes Podozamites trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPodozamitesOverrideBiomes <
     >

    # Maximum height that Podozamites trees can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightPodozamites=100

    # Minimum height that Podozamites trees can generate (1 to 250) [default: 1]
    I:minheightPodozamites=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPodozamites=1.0
}


"worldgen primaeval pine" {
    # List of dimension IDs Primaeval Pines can generate in [default: 0]
    I:dimBristlecone <
        0
     >

    # Set to true to generate Primaeval Pines naturally [default: false]
    B:genBristlecone=false

    # List of biomes Primaeval Pines are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genBristleconeBlacklistBiomes <
     >

    # List of biomes Primaeval Pines are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genBristleconeOverrideBiomes <
     >

    # Minimum height that Primaeval Pines can generate (1 to 250, or set to 0 for unlimited) [default: 0]
    I:maxheightBristlecone=0

    # Minimum height that Primaeval Pines can generate (1 to 250) [default: 120]
    I:minheightBristlecone=120

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierBristlecone=1.0
}


"worldgen primaeval yew" {
    # List of dimension IDs Primaeval Yew trees can generate in [default: 0]
    I:dimYew <
        0
     >

    # Set to true to generate Primaeval Yew trees naturally [default: false]
    B:genYew=false

    # List of biomes Primaeval Yew trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genYewBlacklistBiomes <
     >

    # List of biomes Primaeval Yew trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genYewOverrideBiomes <
     >

    # Maximum height that Primaeval Yew trees can generate (1 to 250, or set to 0 for unlimited) [default: 110]
    I:maxheightYew=110

    # Minimum height that Primaeval Yew trees can generate (1 to 250) [default: 1]
    I:minheightYew=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierYew=1.0
}


"worldgen primaevalgrass" {
    # List of dimension IDs PrimaevalGrass can generate in [default: 0]
    I:dimPrimaevalGrass <
        0
     >

    # Set to true to generate PrimaevalGrass naturally [default: false]
    B:genPrimaevalGrass=false

    # List of biomes PrimaevalGrass are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genPrimaevalGrassBlacklistBiomes <
     >

    # List of biomes PrimaevalGrass are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPrimaevalGrassOverrideBiomes <
     >

    # Maximum height that PrimaevalGrass can generate (1 to 250, or set to 0 for unlimited) [default: 0]
    I:maxheightPrimaevalGrass=0

    # Minimum height that PrimaevalGrass can generate (1 to 250) [default: 1]
    I:minheightPrimaevalGrass=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPrimaevalGrass=1.0

    # Set to true for PrimaevalGrass to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadPrimaevalGrass=true
}


"worldgen protea" {
    # List of dimension IDs Archaeo-protea can generate in [default: 0]
    I:dimProtea <
        0
     >

    # Set to true to generate Archaeo-protea naturally [default: false]
    B:genProtea=false

    # List of biomes Archaeo-protea are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genProteaBlacklistBiomes <
     >

    # List of biomes Archaeo-protea are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genProteaOverrideBiomes <
     >

    # Maximum height that Archaeo-protea can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightProtea=120

    # Minimum height that Archaeo-protea can generate (1 to 250) [default: 85]
    I:minheightProtea=85

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierProtea=1.0
}


"worldgen prototaxites" {
    # List of dimension IDs Prototaxites can generate in [default: 0]
    I:dimPrototaxites <
        0
     >

    # Set to true to generate Prototaxites naturally [default: false]
    B:genPrototaxites=false

    # List of biomes Prototaxites are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genPrototaxitesBlacklistBiomes <
     >

    # List of biomes Prototaxites are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPrototaxitesOverrideBiomes <
     >

    # Maximum height that Prototaxites can generate (1 to 250, or set to 0 for unlimited) [default: 0]
    I:maxheightPrototaxites=0

    # Minimum height that Prototaxites can generate (1 to 250) [default: 1]
    I:minheightPrototaxites=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPrototaxites=1.0

    # Distance NSEW from water that Prototaxites can exist and spread onto neighbouring sand (1 to 16). [default: 3]
    I:waterPrototaxitesHorizontal=3

    # Distance above water required for Prototaxites to exist (0 to 6) [default: 0]
    I:waterPrototaxitesVertical=0
}


"worldgen psaronius" {
    # List of dimension IDs Psaronius can generate in [default: 0]
    I:dimPsaronius <
        0
     >

    # Set to true to generate Psaronius naturally [default: false]
    B:genPsaronius=false

    # List of biomes Psaronius are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genPsaroniusBlacklistBiomes <
     >

    # List of biomes Psaronius are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPsaroniusOverrideBiomes <
     >

    # Maximum height that Psaronius can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightPsaronius=90

    # Minimum height that Psaronius can generate (1 to 250) [default: 1]
    I:minheightPsaronius=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPsaronius=1.0
}


"worldgen pseudobornia" {
    # List of dimension IDs Pseudobornia can generate in [default: 0]
    I:dimPseudobornia <
        0
     >

    # Set to true to generate Pseudobornia naturally [default: false]
    B:genPseudobornia=false

    # List of biomes Pseudobornia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genPseudoborniaBlacklistBiomes <
     >

    # List of biomes Pseudobornia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPseudoborniaOverrideBiomes <
     >

    # Maximum height that Pseudobornia can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightPseudobornia=90

    # Minimum height that Pseudobornia can generate (1 to 250) [default: 1]
    I:minheightPseudobornia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPseudobornia=1.0
}


"worldgen psilophyton" {
    # List of dimension IDs Psilophyton can generate in [default: 0]
    I:dimPsilophyton <
        0
     >

    # Set to true to generate Psilophyton naturally [default: false]
    B:genPsilophyton=false

    # List of biomes Psilophyton are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genPsilophytonBlacklistBiomes <
     >

    # List of biomes Psilophyton are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPsilophytonOverrideBiomes <
     >

    # Maximum height that Psilophyton can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightPsilophyton=90

    # Minimum height that Psilophyton can generate (1 to 250) [default: 1]
    I:minheightPsilophyton=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPsilophyton=1.0

    # Set to true for Psilophyton to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadPsilophyton=true

    # Distance NSEW from water that Psilophyton can exist and spread onto neighbouring sand and dirt, although it will never grow right next to water, (1 to 16) [default: 5]
    I:waterPsilophytonHorizontal=5

    # Distance above water required for Psilophyton to exist (0 to 6) [default: 1]
    I:waterPsilophytonVertical=1
}


"worldgen pterophyllum" {
    # List of dimension IDs Pterophyllum can generate in [default: 0]
    I:dimPterophyllum <
        0
     >

    # Set to true to generate Pterophyllum naturally [default: false]
    B:genPterophyllum=false

    # List of biomes Pterophyllum are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genPterophyllumBlacklistBiomes <
     >

    # List of biomes Pterophyllum are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genPterophyllumOverrideBiomes <
     >

    # Maximum height that Pterophyllum can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightPterophyllum=90

    # Minimum height that Pterophyllum can generate (1 to 250) [default: 1]
    I:minheightPterophyllum=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierPterophyllum=1.0
}


"worldgen quasistrobus" {
    # List of dimension IDs Quasistrobus can generate in [default: 0]
    I:dimQuasistrobus <
        0
     >

    # Set to true to generate Quasistrobus naturally [default: false]
    B:genQuasistrobus=false

    # List of biomes Quasistrobus are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genQuasistrobusBlacklistBiomes <
     >

    # List of biomes Quasistrobus are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genQuasistrobusOverrideBiomes <
     >

    # Maximum height that Quasistrobus can generate (1 to 250, or set to 0 for unlimited) [default: 85]
    I:maxheightQuasistrobus=85

    # Minimum height that Quasistrobus can generate (1 to 250) [default: 1]
    I:minheightQuasistrobus=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierQuasistrobus=1.0
}


"worldgen redwood" {
    # List of dimension IDs Redwood trees can generate in [default: 0]
    I:dimRedwood <
        0
     >

    # Set to true to generate Redwood trees naturally [default: false]
    B:genRedwood=false

    # List of biomes Redwood trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genRedwoodBlacklistBiomes <
     >

    # List of biomes Redwood trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: "minecraft:mutated_redwood_taiga_hills", "biomesoplenty:redwood_forest", "biomesoplenty:redwood_forest_edge", "wildnature:redwood_forest"]
    S:genRedwoodOverrideBiomes <
        minecraft:mutated_redwood_taiga_hills
        biomesoplenty:redwood_forest
        biomesoplenty:redwood_forest_edge
        wildnature:redwood_forest
     >

    # Maximum height that Redwood trees can generate (1 to 250, or set to 0 for unlimited) [default: 110]
    I:maxheightRedwood=110

    # Minimum height that Redwood trees can generate (1 to 250) [default: 1]
    I:minheightRedwood=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierRedwood=1.0
}


"worldgen rhacophyton" {
    # List of dimension IDs Rhacophyton can generate in [default: 0]
    I:dimRhacophyton <
        0
     >

    # Set to true to generate Rhacophyton naturally [default: false]
    B:genRhacophyton=false

    # List of biomes Rhacophyton are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genRhacophytonBlacklistBiomes <
     >

    # List of biomes Rhacophyton are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genRhacophytonOverrideBiomes <
     >

    # Maximum height that Rhacophyton can generate (1 to 250, or set to 0 for unlimited) [default: 85]
    I:maxheightRhacophyton=90

    # Minimum height that Rhacophyton can generate (1 to 250) [default: 1]
    I:minheightRhacophyton=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierRhacophyton=1.0
}


"worldgen rugosa corals" {
    # List of dimension IDs Rugosa Corals can generate in [default: 0]
    I:dimRugosa <
     >
}


"worldgen sahnioxylon" {
    # List of dimension IDs Sahnioxylon can generate in [default: 0]
    I:dimSahnioxylon <
        0
     >

    # Set to true to generate Sahnioxylon naturally [default: false]
    B:genSahnioxylon=false

    # List of biomes Sahnioxylon are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genSahnioxylonBlacklistBiomes <
     >

    # List of biomes Sahnioxylon are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genSahnioxylonOverrideBiomes <
     >

    # Maximum height that Zamites can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightSahnioxylon=120

    # Minimum height that Zamites can generate (1 to 250) [default: 1]
    I:minheightSahnioxylon=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierSahnioxylon=1.0
}


"worldgen schizoneura" {
    # List of dimension IDs Schizoneura can generate in [default: 0]
    I:dimSchizoneura <
        0
     >

    # Set to true to generate Schizoneura naturally [default: false]
    B:genSchizoneura=false

    # List of biomes Schizoneura are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genSchizoneuraBlacklistBiomes <
     >

    # List of biomes Schizoneura are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genSchizoneuraOverrideBiomes <
     >

    # Maximum height that Schizoneura can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightSchizoneura=90

    # Minimum height that Schizoneura can generate (1 to 250) [default: 1]
    I:minheightSchizoneura=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierSchizoneura=1.0
}


"worldgen sciadopitys" {
    # List of dimension IDs Sciadopitys trees can generate in [default: 0]
    I:dimSciadopitys <
        0
     >

    # Set to true to generate Sciadopitys trees naturally [default: false]
    B:genSciadopitys=false

    # List of biomes Sciadopitys trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genSciadopitysBlacklistBiomes <
     >

    # List of biomes Sciadopitys trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genSciadopitysOverrideBiomes <
     >

    # Maximum height that Sciadopitys trees can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightSciadopitys=120

    # Minimum height that Sciadopitys trees can generate (1 to 250) [default: 1]
    I:minheightSciadopitys=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierSciadopitys=1.0

    # Radius for podzol generation at base of Sciadopitys trees (0 - 16: set to 0 to disable) [default: 5]
    I:podzolSciadopitys=5
}


"worldgen scytophyllum" {
    # List of dimension IDs Scytophyllum can generate in [default: 0]
    I:dimScytophyllum <
        0
     >

    # Set to true to generate Scytophyllum naturally [default: false]
    B:genScytophyllum=false

    # List of biomes Scytophyllum are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genScytophyllumBlacklistBiomes <
     >

    # List of biomes Scytophyllum are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genScytophyllumOverrideBiomes <
     >

    # Maximum height that Scytophyllum can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightScytophyllum=90

    # Minimum height that Scytophyllum can generate (1 to 250) [default: 1]
    I:minheightScytophyllum=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierScytophyllum=1.0
}


"worldgen selaginella" {
    # List of dimension IDs Selaginella can generate in [default: 0]
    I:dimSelaginella <
        0
     >

    # Set to true to generate Selaginella naturally [default: false]
    B:genSelaginella=false

    # List of biomes Selaginella is blacklisted from, in the format: modid:biomeid [default: empty]
    S:genSelaginellaBlacklistBiomes <
     >

    # List of biomes Selaginella is forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genSelaginellaOverrideBiomes <
     >

    # Minimum height that Selaginella can generate (1 to 250, or set to 0 for unlimited) [default: 120]
    I:maxheightSelaginella=0

    # Minimum height that Selaginella can generate (1 to 250) [default: 1]
    I:minheightSelaginella=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierSelaginella=1.0

    # Radius Selaginella can spread (0 to 8) [default: 1]
    I:radiusSelaginella=1
}


"worldgen sigillaria" {
    # List of dimension IDs Sigillaria can generate in [default: 0]
    I:dimSigillaria <
        0
     >

    # Set to true to generate Sigillaria naturally [default: false]
    B:genSigillaria=false

    # List of biomes Sigillaria are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genSigillariaBlacklistBiomes <
     >

    # List of biomes Sigillaria are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genSigillariaOverrideBiomes <
     >

    # Maximum height that Sigillaria can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightSigillaria=90

    # Minimum height that Sigillaria can generate (1 to 250) [default: 1]
    I:minheightSigillaria=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierSigillaria=1.0
}


"worldgen southern beech" {
    # List of dimension IDs Nothofagus (Southern Beech) trees can generate in [default: 0]
    I:dimNothofagus <
        0
     >

    # Set to true to generate Nothofagus (Southern Beech) trees naturally [default: false]
    B:genNothofagus=false

    # List of biomes Nothofagus (Southern Beech) trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genNothofagusBlacklistBiomes <
     >

    # List of biomes Nothofagus (Southern Beech) trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genNothofagusOverrideBiomes <
     >

    # Maximum height that Nothofagus (Southern Beech) trees can generate (1 to 250, or set to 0 for unlimited) [default: 110]
    I:maxheightNothofagus=110

    # Minimum height that Nothofagus (Southern Beech) trees can generate (1 to 250) [default: 75]
    I:minheightNothofagus=75

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierNothofagus=1.0

    # Radius for podzol generation at base of Nothofagus trees (0 - 16: set to 0 to disable) [default: 4]
    I:podzolNothofagus=4
}


"worldgen sphenophyllales (climbing)" {
    # List of dimension IDs Climbing Sphenophyllales can generate in [default: 0]
    I:dimSphenophyllales <
        0
     >

    # List of biomes Climbing Sphenophyllales are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genSphenophyllalesBlacklistBiomes <
     >

    # Set to true to generate Climbing Sphenophyllales naturally on Bothrodendron trees [default: false]
    B:genSphenophyllalesBothrodendron=false

    # Set to true to generate Climbing Sphenophyllales naturally on Cordaites trees [default: false]
    B:genSphenophyllalesCordaites=false

    # Set to true to generate Climbing Sphenophyllales naturally on Diaphorodendron trees [default: false]
    B:genSphenophyllalesDiaphorodendron=false

    # Set to true to generate Climbing Sphenophyllales naturally on Lepidodendron trees [default: false]
    B:genSphenophyllalesLepidodendron=false

    # List of biomes Climbing Sphenophyllales are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genSphenophyllalesOverrideBiomes <
     >
}


"worldgen sphenophyllales (scrambling)" {
    # List of dimension IDs Scrambling Sphenophyllales can generate in [default: 0]
    I:dimSphenophyllales1 <
        0
     >

    # Set to true to generate Scrambling Sphenophyllales naturally [default: false]
    B:genSphenophyllales1=false

    # List of biomes Scrambling Sphenophyllales are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genSphenophyllales1BlacklistBiomes <
     >

    # List of biomes Scrambling Sphenophyllales are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genSphenophyllales1OverrideBiomes <
     >

    # Maximum height that Scrambling Sphenophyllales can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightSphenophyllales1=90

    # Minimum height that Scrambling Sphenophyllales can generate (1 to 250) [default: 1]
    I:minheightSphenophyllales1=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierSphenophyllales1=1.0
}


"worldgen sphenopteris" {
    # List of dimension IDs Sphenopteris can generate in [default: 0]
    I:dimSphenopteris <
        0
     >

    # Set to true to generate Sphenopteris naturally [default: false]
    B:genSphenopteris=false

    # List of biomes Sphenopteris are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genSphenopterisBlacklistBiomes <
     >

    # List of biomes Sphenopteris are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genSphenopterisOverrideBiomes <
     >

    # Maximum height that Sphenopteris can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightSphenopteris=100

    # Minimum height that Sphenopteris can generate (1 to 250) [default: 1]
    I:minheightSphenopteris=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierSphenopteris=1.0
}


"worldgen spiny cycad" {
    # List of dimension IDs Spiny Cycads can generate in [default: 0]
    I:dimSpinyCycad <
        0
     >

    # Set to true to generate Spiny Cycads naturally [default: false]
    B:genSpinyCycad=false

    # List of biomes Spiny Cycads are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genSpinyCycadBlacklistBiomes <
     >

    # List of biomes Spiny Cycads are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genSpinyCycadOverrideBiomes <
     >

    # Maximum height that Spiny Cycads can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightSpinyCycad=90

    # Minimum height that Spiny Cycads can generate (1 to 250) [default: 1]
    I:minheightSpinyCycad=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierSpinyCycad=1.0
}


"worldgen stauropteris" {
    # List of dimension IDs Stauropteris can generate in [default: 0]
    I:dimStauropteris <
        0
     >

    # Set to true to generate Stauropteris naturally [default: false]
    B:genStauropteris=false

    # List of biomes Stauropteris are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genStauropterisBlacklistBiomes <
     >

    # List of biomes Stauropteris are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genStauropterisOverrideBiomes <
     >

    # Maximum height that Stauropteris can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightStauropteris=90

    # Minimum height that Stauropteris can generate (1 to 250) [default: 1]
    I:minheightStauropteris=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierStauropteris=1.0
}


"worldgen stromatolite" {
    # List of dimension IDs Stromatolites can generate in [default: 0, -81]
    I:dimStromatolite <
        0
        -81
     >

    # List of biomes Stromatolite are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genStromatoliteBlacklistBiomes <
     >

    # List of biomes Stromatolites are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genStromatoliteOverrideBiomes <
     >
}


"worldgen tempskya" {
    # List of dimension IDs Tempskya can generate in [default: 0]
    I:dimTempskya <
        0
     >

    # Set to true to generate Tempskya naturally [default: false]
    B:genTempskya=false

    # List of biomes Tempskya are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genTempskyaBlacklistBiomes <
     >

    # List of biomes Tempskya are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genTempskyaOverrideBiomes <
     >

    # Maximum height that Tempskya can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightTempskya=90

    # Minimum height that Tempskya can generate (1 to 250) [default: 1]
    I:minheightTempskya=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierTempskya=1.0
}


"worldgen tetraxylopteris" {
    # List of dimension IDs Tetraxylopteris can generate in [default: 0]
    I:dimTetraxylopteris <
        0
     >

    # Set to true to generate Tetraxylopteris naturally [default: false]
    B:genTetraxylopteris=false

    # List of biomes Tetraxylopteris are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genTetraxylopterisBlacklistBiomes <
     >

    # List of biomes Tetraxylopteris are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genTetraxylopterisOverrideBiomes <
     >

    # Maximum height that Tetraxylopteris can generate (1 to 250, or set to 0 for unlimited) [default: 85]
    I:maxheightTetraxylopteris=90

    # Minimum height that Tetraxylopteris can generate (1 to 250) [default: 1]
    I:minheightTetraxylopteris=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierTetraxylopteris=1.0
}


"worldgen tmesipteris" {
    # List of dimension IDs Tmesipteris can generate in [default: 0]
    I:dimTmesipteris <
        0
     >

    # Set to true to generate Tmesipteris naturally [default: false]
    B:genTmesipteris=false

    # List of biomes Tmesipteris are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genTmesipterisBlacklistBiomes <
     >

    # List of biomes Tmesipteris are forced to generate in (provided the dimension is also valid), in the format: modid:biomeid [default: empty]
    S:genTmesipterisOverrideBiomes <
     >

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierTmesipteris=1.0
}


"worldgen tyrmia" {
    # List of dimension IDs Tyrmia can generate in [default: 0]
    I:dimTyrmia <
        0
     >

    # Set to true to generate Tyrmia naturally [default: false]
    B:genTyrmia=false

    # List of biomes Tyrmia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genTyrmiaBlacklistBiomes <
     >

    # List of biomes Tyrmia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genTyrmiaOverrideBiomes <
     >

    # Maximum height that Tyrmia can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightTyrmia=100

    # Minimum height that Tyrmia can generate (1 to 250) [default: 1]
    I:minheightTyrmia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierTyrmia=1.0
}


"worldgen umaltolepis" {
    # List of dimension IDs Umaltolepis can generate in [default: 0]
    I:dimUmaltolepis <
        0
     >

    # Set to true to generate Umaltolepis naturally [default: false]
    B:genUmaltolepis=false

    # List of biomes Umaltolepis are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genUmaltolepisBlacklistBiomes <
     >

    # List of biomes Umaltolepis are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genUmaltolepisOverrideBiomes <
     >

    # Maximum height that Umaltolepis can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightUmaltolepis=90

    # Minimum height that Umaltolepis can generate (1 to 250) [default: 1]
    I:minheightUmaltolepis=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierUmaltolepis=1.0
}


"worldgen utrechtia" {
    # List of dimension IDs Utrechtia can generate in [default: 0]
    I:dimUtrechtia <
        0
     >

    # Set to true to generate Utrechtia naturally [default: false]
    B:genUtrechtia=false

    # List of biomes Utrechtia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genUtrechtiaBlacklistBiomes <
     >

    # List of biomes Utrechtia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genUtrechtiaOverrideBiomes <
     >

    # Maximum height that Utrechtia can generate (1 to 250, or set to 0 for unlimited) [default: 110]
    I:maxheightUtrechtia=110

    # Minimum height that Utrechtia can generate (1 to 250) [default: 1]
    I:minheightPsaronius=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierUtrechtia=1.0
}


"worldgen valmeyerodendron" {
    # List of dimension IDs Valmeyerodendron trees can generate in [default: 0]
    I:dimValmeyerodendron <
        0
     >

    # Set to true to generate Valmeyerodendron trees naturally [default: false]
    B:genValmeyerodendron=false

    # List of biomes Valmeyerodendron trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genValmeyerodendronBlacklistBiomes <
     >

    # List of biomes Valmeyerodendron are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genValmeyerodendronOverrideBiomes <
     >

    # Maximum height that Valmeyerodendron trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightValmeyerodendron=90

    # Minimum height that Valmeyerodendron trees can generate (1 to 250) [default: 1]
    I:minheightValmeyerodendron=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierValmeyerodendron=1.0
}


"worldgen wachtleria" {
    # List of dimension IDs Wachtleria can generate in [default: 0]
    I:dimWachtleria <
        0
     >

    # Set to true to generate Wachtleria naturally [default: false]
    B:genWachtleria=false

    # List of biomes Wachtleria are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genWachtleriaBlacklistBiomes <
     >

    # List of biomes Wachtleria are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genWachtleriaOverrideBiomes <
     >

    # Maximum height that Wachtleria can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightWachtleria=90

    # Minimum height that Wachtleria can generate (1 to 250) [default: 1]
    I:minheightWachtleria=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierWachtleria=1.0
}


"worldgen walchia" {
    # List of dimension IDs Walchia trees can generate in [default: 0]
    I:dimWalchia <
        0
     >

    # Set to true to generate Walchia trees naturally [default: false]
    B:genWalchia=false

    # List of biomes Walchia trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genWalchiaBlacklistBiomes <
     >

    # List of biomes Walchia trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genWalchiaOverrideBiomes <
     >

    # Maximum height that Walchia trees can generate (1 to 250, or set to 0 for unlimited) [default: 125]
    I:maxheightWalchia=125

    # Minimum height that Walchia trees can generate (1 to 250) [default: 75]
    I:minheightWalchia=75

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierWalchia=1.0
}


"worldgen water horsetail" {
    # List of dimension IDs Water Horsetails can generate in [default: 0]
    I:dimWaterHorsetail <
        0
     >

    # Set to true to generate Water Horsetails naturally [default: false]
    B:genWaterHorsetail=false

    # List of biomes Water Horsetails are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genWaterHorsetailBlacklistBiomes <
     >

    # List of biomes Water Horsetails are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genWaterHorsetailOverrideBiomes <
     >

    # Maximum height that Water Horsetails can generate (1 to 250, or set to 0 for unlimited) [default: 0]
    I:maxheightWaterHorsetail=0

    # Minimum height that Water Horsetails can generate (1 to 250) [default: 1]
    I:minheightWaterHorsetail=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierWaterHorsetail=1.0

    # Set to true for Water Horsetails to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadWaterHorsetail=true
}


"worldgen wattieza" {
    # List of dimension IDs Wattieza trees can generate in [default: 0]
    I:dimWattieza <
        0
     >

    # Set to true to generate Wattieza trees naturally [default: false]
    B:genWattieza=false

    # List of biomes Wattieza trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genWattiezaBlacklistBiomes <
     >

    # List of biomes Wattieza trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genWattiezaOverrideBiomes <
     >

    # Maximum height that Wattieza trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightWattieza=90

    # Minimum height that Wattieza trees can generate (1 to 250) [default: 1]
    I:minheightWattieza=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierWattieza=1.0
}


"worldgen wielandiella" {
    # List of dimension IDs Wielandiella can generate in [default: 0]
    I:dimWielandiella <
        0
     >

    # Set to true to generate Wielandiella naturally [default: false]
    B:genWielandiella=false

    # List of biomes Wielandiella are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genWielandiellaBlacklistBiomes <
     >

    # List of biomes Wielandiella are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genWielandiellaOverrideBiomes <
     >

    # Maximum height that Wielandiella can generate (1 to 250, or set to 0 for unlimited) [default: 100]
    I:maxheightWielandiella=100

    # Minimum height that Wielandiella can generate (1 to 250) [default: 1]
    I:minheightWielandiella=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierWielandiella=1.0
}


"worldgen williamsonia" {
    # List of dimension IDs Williamsonia can generate in [default: 0]
    I:dimWilliamsonia <
        0
     >

    # Set to true to generate Williamsonia naturally [default: false]
    B:genWilliamsonia=false

    # List of biomes Williamsonia are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genWilliamsoniaBlacklistBiomes <
     >

    # List of biomes Williamsonia are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genWilliamsoniaOverrideBiomes <
     >

    # Maximum height that Williamsonia can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightWilliamsonia=90

    # Minimum height that Williamsonia can generate (1 to 250) [default: 1]
    I:minheightWilliamsonia=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierWilliamsonia=1.0
}


"worldgen wollemi pine" {
    # List of dimension IDs Wollemi pine trees can generate in [default: 0]
    I:dimWollemi <
        0
     >

    # Set to true to generate Wollemi pine trees naturally [default: false]
    B:genWollemi=false

    # List of biomes Wollemi pine trees are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genWollemiBlacklistBiomes <
     >

    # List of biomes Wollemi pine trees are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: "minecraft:mutated_mesa", "minecraft:mutated_mesa_rock", "minecraft:mutated_mesa_clear_rock"]
    S:genWollemiOverrideBiomes <
        minecraft:mutated_mesa
        minecraft:mutated_mesa_rock
        minecraft:mutated_mesa_clear_rock
     >

    # Maximum height that Wollemi pine trees can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightWollemi=90

    # Minimum height that Wollemi pine trees can generate (1 to 250) [default: 1]
    I:minheightWollemi=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierWollemi=1.0
}


"worldgen wood horsetail" {
    # List of dimension IDs WoodHorsetail can generate in [default: 0]
    I:dimWoodHorsetail <
        0
     >

    # Set to true to generate WoodHorsetail naturally [default: false]
    B:genWoodHorsetail=false

    # List of biomes WoodHorsetail are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genWoodHorsetailBlacklistBiomes <
     >

    # List of biomes WoodHorsetail are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genWoodHorsetailOverrideBiomes <
     >

    # Maximum height that WoodHorsetail can generate (1 to 250, or set to 0 for unlimited) [default: 0]
    I:maxheightWoodHorsetail=0

    # Minimum height that WoodHorsetail can generate (1 to 250) [default: 1]
    I:minheightWoodHorsetail=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierWoodHorsetail=1.0

    # Set to true for Wood Horsetails to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadWoodHorsetail=true
}


"worldgen zamites" {
    # List of dimension IDs Zamites can generate in [default: 0]
    I:dimZamites <
        0
     >

    # Set to true to generate Zamites naturally [default: false]
    B:genZamites=false

    # List of biomes Zamites are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genZamitesBlacklistBiomes <
     >

    # List of biomes Zamites are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genZamitesOverrideBiomes <
     >

    # Maximum height that Zamites can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightZamites=90

    # Minimum height that Zamites can generate (1 to 250) [default: 1]
    I:minheightZamites=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierZamites=1.0
}


"worldgen zosterophyllum" {
    # List of dimension IDs Zosterophyllum can generate in [default: 0]
    I:dimZosterophyllum <
        0
     >

    # Set to true to generate Zosterophyllum naturally [default: false]
    B:genZosterophyllum=false

    # List of biomes Zosterophyllum are blacklisted from, in the format: modid:biomeid [default: empty]
    S:genZosterophyllumBlacklistBiomes <
     >

    # List of biomes Zosterophyllum are forced to generate in provided the dimension is also valid (this will override the global blacklist setting), in the format: modid:biomeid [default: empty]
    S:genZosterophyllumOverrideBiomes <
     >

    # Maximum height that Zosterophyllum can generate (1 to 250, or set to 0 for unlimited) [default: 90]
    I:maxheightZosterophyllum=90

    # Minimum height that Zosterophyllum can generate (1 to 250) [default: 1]
    I:minheightZosterophyllum=1

    # Number to multiply the spawn chance by (eg. 0.5 will halve the chance, and 2 will double it, etc., up to some fixed internal values) [default: 1]
    D:multiplierZosterophyllum=1.0

    # Set to true for Zosterophyllum to spread naturally, and to false to require bonemeal to spread [default: true]
    B:spreadZosterophyllum=true

    # Distance NSEW from water that Zosterophyllum can exist and spread onto neighbouring dirt and grass (1 to 16) [default: 3]
    I:waterZosterophyllumHorizontal=3

    # Distance above water required for Zosterophyllum to exist (0 to 6) [default: 0]
    I:waterZosterophyllumVertical=0
}


"~experimental option: terraform (not guaranteed - experiment at your own risk)" {
    # List of vanilla biomes to terraform (CPU-heavy!). This will make the plants from this mod generate far more densely, like forests. It will also remove all vanilla trees, plants, etc. from the chosen biomes, unless you retain them using the options below. This is not a true world-gen setting but works on every new chunk loaded while this option is on. Remember to turn it off again if you load a world you don't want terraforming! CAUTION: there is no way to re-add removed vanilla plants after this option removes them. This will not affect modded biomes or any modded trees or other decorations. In the format: minecraft:biomeid or just "minecraft" to apply to all vanilla biomes (cannot be applied globally to non-vanilla biomes at present, so you would need to list non-vanilla ones by biomeid) [default: empty]
    S:genTransformBiomes <
     >

    # Retain vanilla cactus in terraformed biomes [default: false]
    B:genTransformBiomesCactus=false

    # Retain vanilla flowers and lilypads in terraformed biomes [default: false]
    B:genTransformBiomesFlowers=false

    # Retain vanilla mushrooms in terraformed biomes [default: false]
    B:genTransformBiomesMushrooms=false

    # Retain vanilla pumpkins and melons in terraformed biomes [default: false]
    B:genTransformBiomesPumpkins=false

    # Retain vanilla sugarcane in terraformed biomes [default: false]
    B:genTransformBiomesReeds=false

    # Retain vanilla trees in terraformed biomes [default: false]
    B:genTransformBiomesTrees=false
}


